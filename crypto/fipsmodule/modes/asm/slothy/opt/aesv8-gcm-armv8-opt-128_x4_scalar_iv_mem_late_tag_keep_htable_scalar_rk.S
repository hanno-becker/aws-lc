// Copyright (c) 2022, ARM Inc.

// Permission to use, copy, modify, and/or distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.

// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
// SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
// OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
// CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. */

// Author: Hanno Becker <hannobecker@posteo.de>

// This file was derived from the assembly generated from aesv8-gcm-armv8.pl,
// written by Fangming Fang <fangming.fang@arm.com> for the OpenSSL project,
// and derived from https: // github.com/ARM-software/AArch64cryptolib, original
// author Samuel Lee <Samuel.Lee@arm.com>.

// The code below is a 'clean' AArch64 implementation of AES-GCM emphasizing
// the logic of the computation. It is meant as the input to manual audits /
// formal verification, as well as automated micro-optimization such as done
// by the SLOTHY superoptimizer (https: // github.com/slothy-optimizer/slothy).

#if !defined(__has_feature)
#define __has_feature(x) 0
#endif
#if __has_feature(memory_sanitizer) && !defined(OPENSSL_NO_ASM)
#define OPENSSL_NO_ASM
#endif

#include <openssl/asm_base.h>

#if !defined(OPENSSL_NO_ASM) && defined(__AARCH64EL__)
#if defined(__ELF__)
#include <openssl/boringssl_prefix_symbols_asm.h>
#include <openssl/arm_arch.h>
.arch   armv8-a+crypto
.text
.globl  aes_gcm_enc_kernel_slothy_base_128
.hidden aes_gcm_enc_kernel_slothy_base_128
.type   aes_gcm_enc_kernel_slothy_base_128,%function
#elif defined(__APPLE__)
#if defined(BORINGSSL_PREFIX)
#include <boringssl_prefix_symbols_asm.h>
#endif
#include <openssl/arm_arch.h>
.text
.globl	_aes_gcm_enc_kernel_slothy_base_128
.private_extern	_aes_gcm_enc_kernel_slothy_base_128
#else
#error Unknown configuration
#endif

#if __ARM_MAX_ARCH__ >= 8

// Arguments
input    .req x0
len_bits .req x1
output   .req x2
tag_ptr  .req x3
ivec     .req x4
key      .req x5
Htable   .req x6

byte_len .req x15

constant_temp .req x25

count           .req x1
full_blocks     .req x7
remainder       .req x16
unroll          .req x10

ctr_tmp   .req x14
ctr_tmp_w .req w14

ivec_0_63    .req x11
ivec_64_96   .req x12
ivec_64_96_w .req w12

ctr      .req w13
ctr_x    .req x13

aes_st    .req v0
aes_st_q  .req q0
aes_st_d  .req d0

res       .req v0
res_q     .req q0

ghash_hi    .req v9
ghash_lo    .req v8
ghash_mid   .req v10
ghash_mid_d .req d10

ghash_tmp   .req v11
ghash_tmp_d .req d11

ghash_mod   .req v7
ghash_mod_d .req d7

modulo_tmp0 .req v0
modulo_tmp1 .req v1

Ht1q   .req q12
Ht2q   .req q13
Ht12q  .req q14

Ht1    .req v12
Ht2    .req v13
Ht12   .req v14

Ht3q   .req q15
Ht4q   .req q16
Ht34q  .req q17

Ht3    .req v15
Ht4    .req v16
Ht34   .req v17

rk0q   .req q18
rk1q   .req q19
rk2q   .req q20
rk3q   .req q21
rk4q   .req q22
rk5q   .req q23
rk6q   .req q24
rk7q   .req q25
rk8q   .req q26
rk9q   .req q27
rk10q  .req q28

rk10_lo .req x20
rk10_hi .req x21

rk0    .req v18
rk1    .req v19
rk2    .req v20
rk3    .req v21
rk4    .req v22
rk5    .req v23
rk6    .req v24
rk7    .req v25
rk8    .req v26
rk9    .req v27
rk10   .req v28

plain   .req v29
plain_q .req q29

plain_lo .req x22
plain_hi .req x23

tag    .req v30
tag_q  .req q30

#define UNROLL 4

#define STACK_SIZE_GPRS  (6*16)
#define STACK_SIZE_VREGS (4*16)
#define STACK_SIZE  (STACK_SIZE_GPRS + STACK_SIZE_VREGS + UNROLL*16)

#define STACK_BASE_GPRS  (0)
#define STACK_BASE_VREGS (STACK_SIZE_GPRS)
#define STACK_BASE_AES_ST (STACK_SIZE_GPRS + STACK_SIZE_VREGS)

/********************************************************************/
/*                 Generic preamble/postamble macros                */
/********************************************************************/

.macro save_vregs
        stp  d8,  d9, [sp, #(STACK_BASE_VREGS + 16*0)]
        stp d10, d11, [sp, #(STACK_BASE_VREGS + 16*1)]
        stp d12, d13, [sp, #(STACK_BASE_VREGS + 16*2)]
        stp d14, d15, [sp, #(STACK_BASE_VREGS + 16*3)]
.endm

.macro restore_vregs
        ldp  d8,  d9, [sp, #(STACK_BASE_VREGS + 16*0)]
        ldp d10, d11, [sp, #(STACK_BASE_VREGS + 16*1)]
        ldp d12, d13, [sp, #(STACK_BASE_VREGS + 16*2)]
        ldp d14, d15, [sp, #(STACK_BASE_VREGS + 16*3)]
.endm

.macro save_gprs
        stp x19, x20, [sp, #(STACK_BASE_GPRS + 16*0)]
        stp x21, x22, [sp, #(STACK_BASE_GPRS + 16*1)]
        stp x23, x24, [sp, #(STACK_BASE_GPRS + 16*2)]
        stp x25, x26, [sp, #(STACK_BASE_GPRS + 16*3)]
        stp x27, x28, [sp, #(STACK_BASE_GPRS + 16*4)]
        stp x29, x30, [sp, #(STACK_BASE_GPRS + 16*5)]
.endm

.macro restore_gprs
        ldp x19, x20, [sp, #(STACK_BASE_GPRS + 16*0)]
        ldp x21, x22, [sp, #(STACK_BASE_GPRS + 16*1)]
        ldp x23, x24, [sp, #(STACK_BASE_GPRS + 16*2)]
        ldp x25, x26, [sp, #(STACK_BASE_GPRS + 16*3)]
        ldp x27, x28, [sp, #(STACK_BASE_GPRS + 16*4)]
        ldp x29, x30, [sp, #(STACK_BASE_GPRS + 16*5)]
.endm

// Derive number of iterations of unrolled loop and single-block loop
.macro prepare_loop_counts
        mov  unroll, #UNROLL
        // Number of AES Blocks (16b each)
        lsr  full_blocks, byte_len, #4
        // Number of iterations of the unrolled loop
        udiv count, full_blocks, unroll
        // Number of iterations for the tail loop handling 1 block each
        msub remainder, count, unroll, full_blocks
.endm

/********************************************************************/
/*                       AES related macros                         */
/********************************************************************/

.macro load_iv
        ldp        ivec_0_63, ivec_64_96, [ivec]
        lsr        ctr_x, ivec_64_96, #32
        rev        ctr, ctr
        orr        ivec_64_96_w, ivec_64_96_w, ivec_64_96_w // clear top 32 bit
.endm

.macro next_ctr_init_aes aes_st, loc
        add        ctr_tmp_w, ctr, #\loc
        rev        ctr_tmp_w, ctr_tmp_w
        orr        ctr_tmp, ivec_64_96, ctr_tmp, lsl #32
        stp        ivec_0_63, ctr_tmp, [sp, #(STACK_BASE_AES_ST + \loc*16)] // @slothy:writes=stack_\loc
        ldr        \aes_st\()_q, [sp, #(STACK_BASE_AES_ST + \loc*16)]       // @slothy:reads=stack_\loc
.endm

// A single AES round
// Prevent SLOTHY from unfolding because uArchs tend to fuse AESMC+AESE
.macro aesr data, key // @slothy:no-unfold
        aese  \data, \key
        aesmc \data, \data
.endm

.macro aesr_0_8 data, key
        aesr \data\().16b, \key\()0.16b
        aesr \data\().16b, \key\()1.16b
        aesr \data\().16b, \key\()2.16b
        aesr \data\().16b, \key\()3.16b
        aesr \data\().16b, \key\()4.16b
        aesr \data\().16b, \key\()5.16b
        aesr \data\().16b, \key\()6.16b
        aesr \data\().16b, \key\()7.16b
        aesr \data\().16b, \key\()8.16b
.endm

.macro aesr_9_10 data, key
        aesr \data\().16b, \key\()9.16b
        aesr \data\().16b, \key\()10.16b
.endm

.macro aesr_11_12 data, key
        aesr \data\().16b, \key\()11.16b
        aesr \data\().16b, \key\()12.16b
.endm

// Destructs inA
.macro eor3 out, inA, inB, inC
        eor \inA, \inA, \inB
        eor \out, \inA, \inC
.endm

.macro aesr_final aes_st, plain, out, loc
        aese \aes_st\().16b, rk9.16b
        eor \plain\()_lo, \plain\()_lo, rk10_lo
        eor \plain\()_hi, \plain\()_hi, rk10_hi
        stp \plain\()_lo, \plain\()_hi, [sp, #(STACK_BASE_AES_ST + \loc*16)] // @slothy:writes=stack_\loc
        ldr \plain\()_q, [sp, #(STACK_BASE_AES_ST + \loc*16)]       // @slothy:reads=stack_\loc
        eor \out\().16b, \plain\().16b, \aes_st\().16b
.endm

.macro aes_full_block aes_st, input, output, loc
        next_ctr_init_aes \aes_st, \loc
        aesr_0_8 \aes_st\(), rk
        aesr_final \aes_st, \input, \output, \loc
.endm

.macro load_round_key i
        ldr rk\i\()q, [key, #((\i)*16)]
.endm

.macro load_round_key_scalar i
        ldp rk\i\()_lo, rk\i\()_hi, [key, #((\i)*16)]
.endm

.macro load_round_keys
        load_round_key 0
        load_round_key 1
        load_round_key 2
        load_round_key 3
        load_round_key 4
        load_round_key 5
        load_round_key 6
        load_round_key 7
        load_round_key 8
        load_round_key 9
        load_round_key_scalar 10
.endm

/********************************************************************/
/*       Loading of H-table (precomputed H-powers for GHASH)        */
/********************************************************************/

// This has to be synchronized with the H-table generation

.macro load_h1 dst, dst_q
        ldr \dst_q, [Htable]
.endm

.macro load_h2 dst, dst_q
        ldr \dst_q, [Htable, #32]
.endm

.macro load_h3 dst, dst_q
        ldr \dst_q, [Htable, #48]
.endm

.macro load_h4 dst, dst_q
        ldr \dst_q, [Htable, #80]
.endm

.macro load_h5 dst, dst_q
        ldr \dst_q, [Htable, #96]
.endm

.macro load_h6 dst, dst_q
        ldr \dst_q, [Htable, #128]
.endm

.macro load_h7 dst, dst_q
        ldr \dst_q, [Htable, #144]
.endm

.macro load_h8 dst, dst_q
        ldr \dst_q, [Htable, #176]
.endm

.macro load_h12 dst, dst_q
        ldr \dst_q, [Htable, #16]
.endm

.macro load_h34 dst, dst_q
        ldr \dst_q, [Htable, #64]
.endm

.macro load_h56 dst, dst_q
        ldr \dst_q, [Htable, #112]
.endm

.macro load_h78 dst, dst_q
        ldr \dst_q, [Htable, #160]
.endm

.macro load_full_htable
        load_h1  Ht1,  Ht1q
        load_h2  Ht2,  Ht2q
        load_h3  Ht3,  Ht3q
        load_h4  Ht4,  Ht4q
        load_h5  Ht5,  Ht5q
        load_h6  Ht6,  Ht6q
        load_h12 Ht12, Ht12q
        load_h34 Ht34, Ht34q
        load_h56 Ht56, Ht56q
.endm

.macro load_htable_12
        load_h1  Ht1,  Ht1q
        load_h2  Ht2,  Ht2q
        load_h12 Ht12, Ht12q
.endm

.macro load_htable_34
        load_h3  Ht3,  Ht3q
        load_h4  Ht4,  Ht4q
        load_h34 Ht34, Ht34q
.endm

.macro load_htable_56
        load_h5  Ht5,  Ht5q
        load_h6  Ht6,  Ht6q
        load_h56 Ht56, Ht56q
.endm

.macro load_htable_78
        load_h7  Ht7,  Ht7q
        load_h8  Ht8,  Ht8q
        load_h78 Ht78, Ht78q
.endm

/********************************************************************/
/*                    Macros for GHASH udpate                       */
/********************************************************************/

.macro ghash_init_0 input, Hk, Hk_mid
        rev64 \input\().16b, \input\().16b
        // Low product
        pmull   ghash_lo.1q, \input\().1d, \Hk\().1d
        // High product
        pmull2  ghash_hi.1q, \input\().2d, \Hk\().2d
        // Middle product
        mov     ghash_tmp_d, \input\().d[1]
        eor     ghash_tmp.8b, ghash_tmp.8b, \input\().8b
        pmull   ghash_mid.1q, ghash_tmp.1d, \Hk_mid\().1d
.endm

.macro ghash_init_1 input, Hk, Hk_mid
        rev64 \input\().16b, \input\().16b
        // Low product
        pmull   ghash_lo.1q, \input\().1d, \Hk\().1d
        // High product
        pmull2  ghash_hi.1q, \input\().2d, \Hk\().2d
        // Middle product
        ext     ghash_tmp.16b, \input\().16b, \input\().16b, #8
        eor     ghash_tmp.16b, ghash_tmp.16b, \input\().16b
        pmull2  ghash_mid.1q, ghash_tmp.2d, \Hk_mid\().2d
.endm

.macro ghash_acc_0 input, Hk, Hk_mid
        rev64   \input\().16b, \input\().16b
        // Low product
        pmull   ghash_tmp.1q, \input\().1d, \Hk\().1d
        eor     ghash_lo.16b, ghash_lo.16b, ghash_tmp.16b
        // High product
        pmull2  ghash_tmp.1q, \input\().2d, \Hk\().2d
        eor     ghash_hi.16b, ghash_hi.16b, ghash_tmp.16b
        // Middle product
        mov     ghash_tmp_d, \input\().d[1]
        eor     ghash_tmp.8b, ghash_tmp.8b, \input\().8b
        pmull   ghash_tmp.1q, ghash_tmp.1d, \Hk_mid\().1d
        eor     ghash_mid.16b, ghash_mid.16b, ghash_tmp.16b
.endm

.macro ghash_acc_1 input, Hk, Hk_mid
        rev64   \input\().16b, \input\().16b
        // Low product
        pmull   ghash_tmp.1q, \input\().1d, \Hk\().1d
        eor     ghash_lo.16b, ghash_lo.16b, ghash_tmp.16b
        // High product
        pmull2  ghash_tmp.1q, \input\().2d, \Hk\().2d
        eor     ghash_hi.16b, ghash_hi.16b, ghash_tmp.16b
        // Middle product
        ext     ghash_tmp.16b, \input\().16b, \input\().16b, #8
        eor     ghash_tmp.16b, ghash_tmp.16b, \input\().16b
        pmull2  ghash_tmp.1q, ghash_tmp.2d, \Hk_mid\().2d
        eor     ghash_mid.16b, ghash_mid.16b, ghash_tmp.16b
.endm

.macro ghash_init_with_tag_0 input, Hk, Hk_mid, tag
        rev64 \input\().16b, \input\().16b
        eor   \input\().16b, \input\().16b, \tag\().16b
        // Low product
        pmull   ghash_lo.1q, \input\().1d, \Hk\().1d
        // High product
        pmull2  ghash_hi.1q, \input\().2d, \Hk\().2d
        // Middle product
        mov     ghash_tmp_d, \input\().d[1]
        eor     ghash_tmp.8b, ghash_tmp.8b, \input\().8b
        pmull   ghash_mid.1q, ghash_tmp.1d, \Hk_mid\().1d
.endm

.macro ghash_init_with_tag_1 input, Hk, Hk_mid, tag
        rev64 \input\().16b, \input\().16b
        eor   \input\().16b, \input\().16b, \tag\().16b
        // Low product
        pmull   ghash_lo.1q, \input\().1d, \Hk\().1d
        // High product
        pmull2  ghash_hi.1q, \input\().2d, \Hk\().2d
        // Middle product
        ext     ghash_tmp.16b, \input\().16b, \input\().16b, #8
        eor     ghash_tmp.16b, ghash_tmp.16b, \input\().16b
        pmull2  ghash_mid.1q, ghash_tmp.2d, \Hk_mid\().2d
.endm

.macro ghash_acc_with_tag_0 input, Hk, Hk_mid, tag
        rev64   \input\().16b, \input\().16b
        eor   \input\().16b, \input\().16b, \tag\().16b
        // Low product
        pmull   ghash_tmp.1q, \input\().1d, \Hk\().1d
        eor     ghash_lo.16b, ghash_lo.16b, ghash_tmp.16b
        // High product
        pmull2  ghash_tmp.1q, \input\().2d, \Hk\().2d
        eor     ghash_hi.16b, ghash_hi.16b, ghash_tmp.16b
        // Middle product
        mov     ghash_tmp_d, \input\().d[1]
        eor     ghash_tmp.8b, ghash_tmp.8b, \input\().8b
        pmull   ghash_tmp.1q, ghash_tmp.1d, \Hk_mid\().1d
        eor     ghash_mid.16b, ghash_mid.16b, ghash_tmp.16b
.endm

.macro ghash_acc_with_tag_1 input, Hk, Hk_mid, tag
        rev64   \input\().16b, \input\().16b
        eor   \input\().16b, \input\().16b, \tag\().16b
        // Low product
        pmull   ghash_tmp.1q, \input\().1d, \Hk\().1d
        eor     ghash_lo.16b, ghash_lo.16b, ghash_tmp.16b
        // High product
        pmull2  ghash_tmp.1q, \input\().2d, \Hk\().2d
        eor     ghash_hi.16b, ghash_hi.16b, ghash_tmp.16b
        // Middle product
        ext     ghash_tmp.16b, \input\().16b, \input\().16b, #8
        eor     ghash_tmp.16b, ghash_tmp.16b, \input\().16b
        pmull2  ghash_tmp.1q, ghash_tmp.2d, \Hk_mid\().2d
        eor     ghash_mid.16b, ghash_mid.16b, ghash_tmp.16b
.endm

.macro ghash_finalize tag
        eor        modulo_tmp0.16b, ghash_lo.16b,  ghash_hi.16b
        pmull      modulo_tmp1.1q,  ghash_hi.1d,   ghash_mod.1d
        ext        ghash_hi.16b,    ghash_hi.16b,  ghash_hi.16b, #8
        eor        ghash_mid.16b,   ghash_mid.16b, modulo_tmp0.16b
        eor        modulo_tmp1.16b, ghash_hi.16b,  modulo_tmp1.16b
        eor        ghash_mid.16b,   ghash_mid.16b, modulo_tmp1.16b
        pmull      ghash_hi.1q,     ghash_mid.1d,  ghash_mod.1d
        eor        ghash_lo.16b,    ghash_lo.16b,  ghash_hi.16b
        ext        ghash_mid.16b,   ghash_mid.16b, ghash_mid.16b, #8
        eor        \tag\().16b,     ghash_lo.16b,  ghash_mid.16b
        ext        \tag\().16b, \tag\().16b, \tag\().16b, #8
.endm

.macro load_tag
        ldr      tag_q, [tag_ptr]
        rev64    tag.16b, tag.16b
.endm

.macro prepare_ghash
        // Prepare constant for modular reduction
        movi ghash_mod.8b, #0xc2
        shl  ghash_mod_d, ghash_mod_d, #56
.endm

/********************************************************************/
/*                            Core routine                          */
/********************************************************************/

.align        4
_aes_gcm_enc_kernel_slothy_base_128:
aes_gcm_enc_kernel_slothy_base_128:
#ifdef BORINGSSL_DISPATCH_TEST
        adrp  x9,_BORINGSSL_function_hit@PAGE
        add   x9, x9, _BORINGSSL_function_hit@PAGEOFF
        mov   w10, #1
        strb  w10, [x9,#2] // kFlag_aes_gcm_enc_kernel
#endif

        AARCH64_VALID_CALL_TARGET
        sub sp, sp, #STACK_SIZE

Lenc_preamble_start:
        save_gprs
        save_vregs

        lsr byte_len, len_bits, #3

        load_round_keys
        load_tag
        load_iv

        prepare_loop_counts
        prepare_ghash

        load_htable_12
        load_htable_34

Lenc_preamble_end:

        cbz count, Lloop_unrolled_end
        cmp count, #1
        b.eq Lloop_unrolled_start_iter_1
                                                           // Instructions:    132
                                                           // Expected cycles: 60
                                                           // Expected IPC:    2.20
                                                           // ------------------ expected cycle count ------------------->
                                                           // 0                        25                       50
                                                           // |------------------------|------------------------|---------
        ldp x27, x30, [x0], #(4*16)                        // *...........................................................
        ldp x24, x17, [x0], #(4*16)                        // *...........................................................
        add w19, w13, #1                                   // *...........................................................
        rev w7, w19                                        // .*..........................................................
        add w28, w13, #3                                   // .*..........................................................
        add w26, w13, #UNROLL                              // .*..........................................................
        orr x7, x12, x7, lsl #32                           // ..*.........................................................
        rev w19, w28                                       // ..*.........................................................
        add w23, w26, #3                                   // ..*.........................................................
        stp x11, x7, [sp, #STACK_BASE_AES_ST + 16]         // ...*........................................................ // @slothy:writes=stack_1
        orr x10, x12, x19, lsl #32                         // ...*........................................................
        add w22, w13, #2                                   // ...*........................................................
        add w14, w13, #0                                   // ....*.......................................................
        add w28, w26, #0                                   // ....*.......................................................
        stp x11, x10, [sp, #STACK_BASE_AES_ST + 48]        // ....*....................................................... // @slothy:writes=stack_3
        ldr q0, [sp, #STACK_BASE_AES_ST + 16]              // .....*...................................................... // @slothy:reads=stack_1
        eor x29, x27, x20                                  // .....*......................................................
        rev w7, w28                                        // .....*......................................................
        rev w19, w22                                       // .....*......................................................
        ldr q8, [sp, #STACK_BASE_AES_ST + 48]              // ......*..................................................... // @slothy:reads=stack_3
        ldp x13, x28, [x0, #-112]                          // ......*.....................................................
        add w10, w26, #1                                   // ......*.....................................................
        orr x19, x12, x19, lsl #32                         // ......*.....................................................
        eor x25, x30, x21                                  // .......*....................................................
        stp x11, x19, [sp, #STACK_BASE_AES_ST + 32]        // .......*.................................................... // @slothy:writes=stack_2
        rev w10, w10                                       // .......*....................................................
        orr x22, x12, x10, lsl #32                         // ........*...................................................
        eor x17, x17, x21                                  // ........*...................................................
        stp x29, x25, [sp, #STACK_BASE_AES_ST]             // ........*................................................... // @slothy:writes=stack_0
        aesr v0.16b, v18.16b                               // .........*..................................................
        ldr q11, [sp, #STACK_BASE_AES_ST + 32]             // .........*.................................................. // @slothy:reads=stack_2
        orr x7, x12, x7, lsl #32                           // .........*..................................................
        rev w23, w23                                       // .........*..................................................
        aesr v8.16b, v18.16b                               // ..........*.................................................
        ldr q5, [sp, #STACK_BASE_AES_ST]                   // ..........*................................................. // @slothy:reads=stack_0
        eor x10, x13, x20                                  // ..........*.................................................
        eor x25, x28, x21                                  // ..........*.................................................
        aesr v0.16b, v19.16b                               // ...........*................................................
        stp x10, x25, [sp, #STACK_BASE_AES_ST + 16]        // ...........*................................................ // @slothy:writes=stack_1
        rev w14, w14                                       // ...........*................................................
        orr x23, x12, x23, lsl #32                         // ...........*................................................
        aesr v8.16b, v19.16b                               // ............*...............................................
        orr x14, x12, x14, lsl #32                         // ............*...............................................
        add w13, w26, #2                                   // ............*...............................................
        ldr q9, [sp, #STACK_BASE_AES_ST + 16]              // .............*.............................................. // @slothy:reads=stack_1
        aesr v0.16b, v20.16b                               // .............*..............................................
        ldp x27, x25, [x0, #-32]                           // .............*..............................................
        aesr v8.16b, v20.16b                               // ..............*.............................................
        eor x29, x24, x20                                  // ..............*.............................................
        rev w8, w13                                        // ..............*.............................................
        ldp x10, x24, [x0, #-80]                           // ..............*.............................................
        aesr v0.16b, v21.16b                               // ...............*............................................
        ldp x28, x30, [x0, #-48]                           // ...............*............................................
        aesr v8.16b, v21.16b                               // ................*...........................................
        add w13, w26, #UNROLL                              // ................*...........................................
        aesr v0.16b, v22.16b                               // .................*..........................................
        eor x26, x25, x21                                  // .................*..........................................
        stp x11, x14, [sp, #STACK_BASE_AES_ST]             // .................*.......................................... // @slothy:writes=stack_0
        aesr v8.16b, v22.16b                               // ..................*.........................................
        eor x14, x24, x21                                  // ..................*.........................................
        eor x24, x10, x20                                  // ..................*.........................................
        aesr v0.16b, v23.16b                               // ...................*........................................
        eor x28, x28, x20                                  // ...................*........................................
        eor x19, x30, x21                                  // ...................*........................................
        ldr q29, [sp, #STACK_BASE_AES_ST]                  // ....................*....................................... // @slothy:reads=stack_0
        aesr v8.16b, v23.16b                               // ....................*.......................................
        stp x28, x19, [sp, #STACK_BASE_AES_ST + 16]        // ....................*....................................... // @slothy:writes=stack_1
        aesr v0.16b, v24.16b                               // .....................*......................................
        stp x24, x14, [sp, #STACK_BASE_AES_ST + 48]        // .....................*...................................... // @slothy:writes=stack_3
        aesr v8.16b, v24.16b                               // ......................*.....................................
        ldr q4, [sp, #STACK_BASE_AES_ST + 16]              // ......................*..................................... // @slothy:reads=stack_1
        aesr v0.16b, v25.16b                               // .......................*....................................
        ldr q3, [sp, #STACK_BASE_AES_ST + 48]              // .......................*.................................... // @slothy:reads=stack_3
        aesr v8.16b, v25.16b                               // ........................*...................................
        stp x11, x23, [sp, #STACK_BASE_AES_ST + 48]        // ........................*................................... // @slothy:writes=stack_3
        ldp x30, x25, [x0, #-96]                           // ........................*...................................
        aesr v0.16b, v26.16b                               // .........................*..................................
        aesr v29.16b, v18.16b                              // ..........................*.................................
        stp x11, x22, [sp, #STACK_BASE_AES_ST + 16]        // ..........................*................................. // @slothy:writes=stack_1
        aese v0.16b, v27.16b                               // ...........................*................................
        stp x11, x7, [sp, #STACK_BASE_AES_ST]              // ...........................*................................ // @slothy:writes=stack_0
        aesr v29.16b, v19.16b                              // ............................*...............................
        eor x22, x25, x21                                  // ............................*...............................
        aesr v11.16b, v18.16b                              // .............................*..............................
        eor v6.16B, v9.16B, v0.16B                         // .............................*..............................
        aesr v29.16b, v20.16b                              // ..............................*.............................
        eor x25, x30, x20                                  // ..............................*.............................
        aesr v11.16b, v19.16b                              // ...............................*............................
        str q6, [x2, #16]                                  // ...............................*............................
        rev64 v28.16B, v6.16B                              // ................................*...........................
        aesr v29.16b, v21.16b                              // ................................*...........................
        ldr q31, [sp, #STACK_BASE_AES_ST + 16]             // .................................*.......................... // @slothy:reads=stack_1
        aesr v11.16b, v20.16b                              // .................................*..........................
        aesr v29.16b, v22.16b                              // ..................................*.........................
        mov d10, v28.d[1]                                  // ..................................*.........................
        aesr v11.16b, v21.16b                              // ...................................*........................
        stp x25, x22, [sp, #STACK_BASE_AES_ST + 32]        // ...................................*........................ // @slothy:writes=stack_2
        aesr v29.16b, v23.16b                              // ....................................*.......................
        eor v9.8B, v10.8B, v28.8B                          // ....................................*.......................
        aesr v31.16b, v18.16b                              // .....................................*......................
        aesr v29.16b, v24.16b                              // ......................................*.....................
        aesr v31.16b, v19.16b                              // .......................................*....................
        aesr v29.16b, v25.16b                              // ........................................*...................
        aesr v31.16b, v20.16b                              // .........................................*..................
        aesr v29.16b, v26.16b                              // ..........................................*.................
        aesr v31.16b, v21.16b                              // ...........................................*................
        ldp x19, x25, [x0, #-16]                           // ...........................................*................
        aese v29.16b, v27.16b                              // ............................................*...............
        aesr v8.16b, v26.16b                               // .............................................*..............
        eor v29.16B, v5.16B, v29.16B                       // ..............................................*.............
        aesr v31.16b, v22.16b                              // ..............................................*.............
        aese v8.16b, v27.16b                               // ...............................................*............
        eor x19, x19, x20                                  // ...............................................*............
        rev64 v0.16B, v29.16B                              // ................................................*...........
        aesr v31.16b, v23.16b                              // ................................................*...........
        aesr v11.16b, v22.16b                              // .................................................*..........
        eor x7, x25, x21                                   // .................................................*..........
        eor v5.16B, v0.16B, v30.16B                        // ..................................................*.........
        aesr v31.16b, v24.16b                              // ..................................................*.........
        aesr v11.16b, v23.16b                              // ...................................................*........
        aesr v31.16b, v25.16b                              // ....................................................*.......
        ext v10.16B, v5.16B, v5.16B, #8                    // ....................................................*.......
        aesr v11.16b, v24.16b                              // .....................................................*......
        aesr v31.16b, v26.16b                              // ......................................................*.....
        eor v10.16B, v10.16B, v5.16B                       // ......................................................*.....
        aesr v11.16b, v25.16b                              // .......................................................*....
        aese v31.16b, v27.16b                              // ........................................................*...
        pmull2 v0.1q, v5.2d, v16.2d                        // .........................................................*..
        eor v30.16B, v4.16B, v31.16B                       // ..........................................................*.
        aesr v11.16b, v26.16b                              // ..........................................................*.
        ldr q31, [sp, #STACK_BASE_AES_ST]                  // ...........................................................* // @slothy:reads=stack_0
        pmull2 v1.1q, v28.2d, v15.2d                       // ...........................................................*

        // original source code
        // add W<ssa_2>, w13, #3                                          // .*..........................................................
        // ldp X<ssa_5>, X<ssa_6>, [x0, #16]                              // ......*.....................................................
        // add W<ssa_12>, w13, #1                                         // *...........................................................
        // eor X<ssa_13>, X<ssa_6>, x21                                   // ..........*.................................................
        // rev W<ssa_16>, W<ssa_12>                                       // .*..........................................................
        // add W<ssa_18>, w13, #2                                         // ...*........................................................
        // eor X<ssa_19>, X<ssa_5>, x20                                   // ..........*.................................................
        // orr X<ssa_20>, x12, X<ssa_16>, lsl #32                         // ..*.........................................................
        // ldp X<ssa_22>, X<ssa_23>, [x0, #48]                            // ..............*.............................................
        // eor X<ssa_27>, X<ssa_22>, x20                                  // ..................*.........................................
        // stp x11, X<ssa_20>, [sp, #STACK_BASE_AES_ST + 16]              // ...*........................................................
        // add W<ssa_32>, w13, #0                                         // ....*.......................................................
        // ldp X<ssa_37>, X<ssa_38>, [x0, #32]                            // ........................*...................................
        // rev W<ssa_41>, W<ssa_18>                                       // .....*......................................................
        // ldr Q<ssa_47>, [sp, #STACK_BASE_AES_ST + 16]                   // .....*......................................................
        // stp X<ssa_19>, X<ssa_13>, [sp, #STACK_BASE_AES_ST + 16]        // ...........*................................................
        // rev W<ssa_53>, W<ssa_2>                                        // ..*.........................................................
        // rev W<ssa_55>, W<ssa_32>                                       // ...........*................................................
        // aesr V<ssa_47>.16b, v18.16b                                    // .........*..................................................
        // aesr V<ssa_47>.16b, v19.16b                                    // ...........*................................................
        // eor X<ssa_61>, X<ssa_38>, x21                                  // ............................*...............................
        // eor X<ssa_64>, X<ssa_23>, x21                                  // ..................*.........................................
        // aesr V<ssa_47>.16b, v20.16b                                    // .............*..............................................
        // orr X<ssa_66>, x12, X<ssa_55>, lsl #32                         // ............*...............................................
        // ldp X<ssa_68>, X<ssa_69>, [x0], #(4*16)                        // *...........................................................
        // aesr V<ssa_47>.16b, v21.16b                                    // ...............*............................................
        // ldr Q<ssa_71>, [sp, #STACK_BASE_AES_ST + 16]                   // .............*..............................................
        // aesr V<ssa_47>.16b, v22.16b                                    // .................*..........................................
        // eor X<ssa_74>, X<ssa_68>, x20                                  // .....*......................................................
        // aesr V<ssa_47>.16b, v23.16b                                    // ...................*........................................
        // eor X<ssa_78>, X<ssa_69>, x21                                  // .......*....................................................
        // aesr V<ssa_47>.16b, v24.16b                                    // .....................*......................................
        // stp x11, X<ssa_66>, [sp, #STACK_BASE_AES_ST]                   // .................*..........................................
        // aesr V<ssa_47>.16b, v25.16b                                    // .......................*....................................
        // add W<ssa_83>, w13, #UNROLL                                    // .*..........................................................
        // orr X<ssa_84>, x12, X<ssa_53>, lsl #32                         // ...*........................................................
        // stp x11, X<ssa_84>, [sp, #STACK_BASE_AES_ST + 48]              // ....*.......................................................
        // aesr V<ssa_47>.16b, v26.16b                                    // .........................*..................................
        // aese V<ssa_47>.16b, v27.16b                                    // ...........................*................................
        // ldr Q<ssa_89>, [sp, #STACK_BASE_AES_ST]                        // ....................*.......................................
        // eor V<ssa_92>.16B, V<ssa_71>.16B, V<ssa_47>.16B                // .............................*..............................
        // rev64 v28.16B, V<ssa_92>.16B                                   // ................................*...........................
        // add W<ssa_95>, W<ssa_83>, #3                                   // ..*.........................................................
        // orr X<ssa_96>, x12, X<ssa_41>, lsl #32                         // ......*.....................................................
        // aesr V<ssa_89>.16b, v18.16b                                    // ..........................*.................................
        // ldp X<ssa_98>, X<ssa_99>, [x0, #16]                            // ...............*............................................
        // ldr q8, [sp, #STACK_BASE_AES_ST + 48]                          // ......*.....................................................
        // aesr V<ssa_89>.16b, v19.16b                                    // ............................*...............................
        // stp X<ssa_27>, X<ssa_64>, [sp, #STACK_BASE_AES_ST + 48]        // .....................*......................................
        // aesr V<ssa_89>.16b, v20.16b                                    // ..............................*.............................
        // stp X<ssa_74>, X<ssa_78>, [sp, #STACK_BASE_AES_ST]             // ........*...................................................
        // aesr v8.16b, v18.16b                                           // ..........*.................................................
        // add W<ssa_104>, W<ssa_83>, #1                                  // ......*.....................................................
        // eor X<ssa_105>, X<ssa_99>, x21                                 // ...................*........................................
        // aesr V<ssa_89>.16b, v21.16b                                    // ................................*...........................
        // stp x11, X<ssa_96>, [sp, #STACK_BASE_AES_ST + 32]              // .......*....................................................
        // rev W<ssa_108>, W<ssa_104>                                     // .......*....................................................
        // add W<ssa_110>, W<ssa_83>, #2                                  // ............*...............................................
        // eor X<ssa_111>, X<ssa_98>, x20                                 // ...................*........................................
        // orr X<ssa_112>, x12, X<ssa_108>, lsl #32                       // ........*...................................................
        // ldp X<ssa_114>, X<ssa_115>, [x0, #48]                          // ...........................................*................
        // eor X<ssa_116>, X<ssa_37>, x20                                 // ..............................*.............................
        // aesr V<ssa_89>.16b, v22.16b                                    // ..................................*.........................
        // aesr v8.16b, v19.16b                                           // ............*...............................................
        // aesr V<ssa_89>.16b, v23.16b                                    // ....................................*.......................
        // str Q<ssa_92>, [x2, #16]                                       // ...............................*............................
        // aesr v8.16b, v20.16b                                           // ..............*.............................................
        // eor x19, X<ssa_114>, x20                                       // ...............................................*............
        // aesr V<ssa_89>.16b, v24.16b                                    // ......................................*.....................
        // stp x11, X<ssa_112>, [sp, #STACK_BASE_AES_ST + 16]             // ..........................*.................................
        // aesr v8.16b, v21.16b                                           // ................*...........................................
        // aesr V<ssa_89>.16b, v25.16b                                    // ........................................*...................
        // aesr v8.16b, v22.16b                                           // ..................*.........................................
        // add W<ssa_123>, W<ssa_83>, #0                                  // ....*.......................................................
        // ldr q11, [sp, #STACK_BASE_AES_ST + 32]                         // .........*..................................................
        // aesr V<ssa_89>.16b, v26.16b                                    // ..........................................*.................
        // aesr v8.16b, v23.16b                                           // ....................*.......................................
        // aesr v8.16b, v24.16b                                           // ......................*.....................................
        // ldp x27, X<ssa_127>, [x0, #32]                                 // .............*..............................................
        // aesr v8.16b, v25.16b                                           // ........................*...................................
        // rev w8, W<ssa_110>                                             // ..............*.............................................
        // aesr v11.16b, v18.16b                                          // .............................*..............................
        // aesr v8.16b, v26.16b                                           // .............................................*..............
        // aesr v11.16b, v19.16b                                          // ...............................*............................
        // aese v8.16b, v27.16b                                           // ...............................................*............
        // ldr Q<ssa_135>, [sp, #STACK_BASE_AES_ST + 16]                  // .................................*..........................
        // stp X<ssa_111>, X<ssa_105>, [sp, #STACK_BASE_AES_ST + 16]      // ....................*.......................................
        // ldr Q<ssa_140>, [sp, #STACK_BASE_AES_ST]                       // ..........*.................................................
        // rev W<ssa_141>, W<ssa_95>                                      // .........*..................................................
        // aesr v11.16b, v20.16b                                          // .................................*..........................
        // rev W<ssa_143>, W<ssa_123>                                     // .....*......................................................
        // aesr V<ssa_135>.16b, v18.16b                                   // .....................................*......................
        // stp X<ssa_116>, X<ssa_61>, [sp, #STACK_BASE_AES_ST + 32]       // ...................................*........................
        // aesr V<ssa_135>.16b, v19.16b                                   // .......................................*....................
        // eor x26, X<ssa_127>, x21                                       // .................*..........................................
        // pmull2 v1.1q, v28.2d, v15.2d                                   // ...........................................................*
        // eor x7, X<ssa_115>, x21                                        // .................................................*..........
        // aesr V<ssa_135>.16b, v20.16b                                   // .........................................*..................
        // orr X<ssa_150>, x12, X<ssa_143>, lsl #32                       // .........*..................................................
        // aese V<ssa_89>.16b, v27.16b                                    // ............................................*...............
        // ldp X<ssa_152>, X<ssa_153>, [x0], #(4*16)                      // *...........................................................
        // aesr V<ssa_135>.16b, v21.16b                                   // ...........................................*................
        // aesr v11.16b, v21.16b                                          // ...................................*........................
        // ldr Q<ssa_155>, [sp, #STACK_BASE_AES_ST + 16]                  // ......................*.....................................
        // aesr V<ssa_135>.16b, v22.16b                                   // ..............................................*.............
        // mov D<ssa_156>, v28.d[1]                                       // ..................................*.........................
        // eor x29, X<ssa_152>, x20                                       // ..............*.............................................
        // aesr V<ssa_135>.16b, v23.16b                                   // ................................................*...........
        // eor v29.16B, V<ssa_140>.16B, V<ssa_89>.16B                     // ..............................................*.............
        // eor x17, X<ssa_153>, x21                                       // ........*...................................................
        // aesr V<ssa_135>.16b, v24.16b                                   // ..................................................*.........
        // ldr q3, [sp, #STACK_BASE_AES_ST + 48]                          // .......................*....................................
        // aesr v11.16b, v22.16b                                          // .................................................*..........
        // stp x11, X<ssa_150>, [sp, #STACK_BASE_AES_ST]                  // ...........................*................................
        // aesr V<ssa_135>.16b, v25.16b                                   // ....................................................*.......
        // rev64 V<ssa_162>.16B, v29.16B                                  // ................................................*...........
        // add w13, W<ssa_83>, #UNROLL                                    // ................*...........................................
        // orr X<ssa_163>, x12, X<ssa_141>, lsl #32                       // ...........*................................................
        // aesr v11.16b, v23.16b                                          // ...................................................*........
        // stp x11, X<ssa_163>, [sp, #STACK_BASE_AES_ST + 48]             // ........................*...................................
        // eor v9.8B, V<ssa_156>.8B, v28.8B                               // ....................................*.......................
        // aesr V<ssa_135>.16b, v26.16b                                   // ......................................................*.....
        // eor v5.16B, V<ssa_162>.16B, v30.16B                            // ..................................................*.........
        // aesr v11.16b, v24.16b                                          // .....................................................*......
        // aese V<ssa_135>.16b, v27.16b                                   // ........................................................*...
        // ldr q31, [sp, #STACK_BASE_AES_ST]                              // ...........................................................*
        // aesr v11.16b, v25.16b                                          // .......................................................*....
        // ext V<ssa_165>.16B, v5.16B, v5.16B, #8                         // ....................................................*.......
        // pmull2 v0.1q, v5.2d, v16.2d                                    // .........................................................*..
        // eor v30.16B, V<ssa_155>.16B, V<ssa_135>.16B                    // ..........................................................*.
        // aesr v11.16b, v26.16b                                          // ..........................................................*.
        // eor v10.16B, V<ssa_165>.16B, v5.16B                            // ......................................................*.....

        sub count, count, #2
cbz count, Lloop_unrolled_start_postamble
Lloop_unrolled_start:
                                                           // Instructions:    134
                                                           // Expected cycles: 55
                                                           // Expected IPC:    2.44
                                                           // ---------------- expected cycle count ---------------->
                                                           // 0                        25                       50
                                                           // |------------------------|------------------------|----
        pmull v2.1q, v28.1d, v15.1d                        // l......................................................
        rev64 v28.16B, v30.16B                             // *......................................................
        add w22, w13, #3                                   // e......................................................
        orr x23, x12, x8, lsl #32                          // *......................................................
        eor v6.16B, v3.16B, v8.16B                         // .l.....................................................
        aesr v31.16b, v18.16b                              // .*.....................................................
        ldp x25, x28, [x0, #16]                            // .e.....................................................
        ldr q8, [sp, #STACK_BASE_AES_ST + 48]              // ..*.................................................... // @slothy:reads=stack_3
        pmull v5.1q, v5.1d, v16.1d                         // ..l....................................................
        aesr v31.16b, v19.16b                              // ...*...................................................
        stp x19, x7, [sp, #STACK_BASE_AES_ST + 48]         // ...*................................................... // @slothy:writes=stack_3
        aese v11.16b, v27.16b                              // ....l..................................................
        str q6, [x2, #48]                                  // ....l..................................................
        str q29, [x2], #(4*16)                             // .....l.................................................
        aesr v31.16b, v20.16b                              // .....*.................................................
        stp x29, x17, [sp, #STACK_BASE_AES_ST]             // .....*................................................. // @slothy:writes=stack_0
        aesr v8.16b, v18.16b                               // ......*................................................
        rev64 v29.16B, v6.16B                              // ......l................................................
        add w24, w13, #1                                   // ......e................................................
        eor x14, x28, x21                                  // ......e................................................
        ldr q4, [sp, #STACK_BASE_AES_ST + 32]              // .......l............................................... // @slothy:reads=stack_2
        aesr v31.16b, v21.16b                              // .......*...............................................
        stp x11, x23, [sp, #STACK_BASE_AES_ST + 32]        // .......*............................................... // @slothy:writes=stack_2
        rev w19, w24                                       // .......e...............................................
        pmull2 v3.1q, v10.2d, v17.2d                       // ........l..............................................
        add w8, w13, #2                                    // ........e..............................................
        eor x10, x25, x20                                  // ........e..............................................
        orr x30, x12, x19, lsl #32                         // ........e..............................................
        pmull v10.1q, v29.1d, v12.1d                       // .........l.............................................
        ldp x19, x25, [x0, #48]                            // .........e.............................................
        eor x29, x27, x20                                  // .........*.............................................
        aesr v31.16b, v22.16b                              // ..........*............................................
        aesr v8.16b, v19.16b                               // ...........*...........................................
        eor v11.16B, v4.16B, v11.16B                       // ...........l...........................................
        aesr v31.16b, v23.16b                              // ............*..........................................
        str q30, [x2, #16]                                 // ............*..........................................
        rev64 v6.16B, v11.16B                              // .............l.........................................
        aesr v8.16b, v20.16b                               // .............*.........................................
        eor x19, x19, x20                                  // .............e.........................................
        aesr v31.16b, v24.16b                              // ..............*........................................
        stp x11, x30, [sp, #STACK_BASE_AES_ST + 16]        // ..............e........................................ // @slothy:writes=stack_1
        pmull v30.1q, v6.1d, v13.1d                        // ...............l.......................................
        ext v4.16B, v6.16B, v6.16B, #8                     // ...............l.......................................
        aesr v8.16b, v21.16b                               // ................*......................................
        str q11, [x2, #-32]                                // ................l......................................
        aesr v31.16b, v25.16b                              // .................*.....................................
        eor v30.16B, v10.16B, v30.16B                      // .................l.....................................
        aesr v8.16b, v22.16b                               // ..................*....................................
        add w17, w13, #0                                   // ..................e....................................
        ldr q11, [sp, #STACK_BASE_AES_ST + 32]             // ...................*................................... // @slothy:reads=stack_2
        aesr v31.16b, v26.16b                              // ...................*...................................
        aesr v8.16b, v23.16b                               // ....................*..................................
        eor v30.16B, v30.16B, v2.16B                       // ....................l..................................
        eor v10.16B, v4.16B, v6.16B                        // .....................l.................................
        pmull2 v4.1q, v29.2d, v12.2d                       // .....................l.................................
        aesr v8.16b, v24.16b                               // ......................*................................
        ldp x27, x28, [x0, #32]                            // ......................e................................
        pmull2 v6.1q, v6.2d, v13.2d                        // .......................l...............................
        eor v5.16B, v30.16B, v5.16B                        // .......................l...............................
        aesr v8.16b, v25.16b                               // ........................*..............................
        rev w8, w8                                         // ........................e..............................
        aesr v11.16b, v18.16b                              // .........................*.............................
        eor v2.16B, v4.16B, v6.16B                         // .........................l.............................
        aesr v8.16b, v26.16b                               // ..........................*............................
        mov d30, v29.d[1]                                  // ..........................l............................
        aesr v11.16b, v19.16b                              // ...........................*...........................
        eor v1.16B, v2.16B, v1.16B                         // ...........................l...........................
        aese v8.16b, v27.16b                               // ............................*..........................
        eor v30.8B, v30.8B, v29.8B                         // ............................l..........................
        pmull2 v10.1q, v10.2d, v14.2d                      // .............................l.........................
        ldr q4, [sp, #STACK_BASE_AES_ST + 16]              // .............................e......................... // @slothy:reads=stack_1
        pmull v6.1q, v30.1d, v14.1d                        // ..............................l........................
        eor v2.16B, v1.16B, v0.16B                         // ..............................l........................
        stp x10, x14, [sp, #STACK_BASE_AES_ST + 16]        // ..............................e........................ // @slothy:writes=stack_1
        pmull v0.1q, v9.1d, v17.1d                         // ...............................l.......................
        ldr q29, [sp, #STACK_BASE_AES_ST]                  // ...............................*....................... // @slothy:reads=stack_0
        rev w10, w22                                       // ...............................e.......................
        aesr v11.16b, v20.16b                              // ................................*......................
        eor v10.16B, v6.16B, v10.16B                       // ................................l......................
        rev w22, w17                                       // ................................e......................
        aesr v4.16b, v18.16b                               // .................................e.....................
        ext v9.16B, v2.16B, v2.16B, #8                     // .................................l.....................
        stp x29, x26, [sp, #STACK_BASE_AES_ST + 32]        // .................................*..................... // @slothy:writes=stack_2
        eor v30.16B, v10.16B, v0.16B                       // ..................................l....................
        pmull v0.1q, v2.1d, v7.1d                          // ..................................l....................
        aesr v4.16b, v19.16b                               // ...................................e...................
        eor v10.16B, v5.16B, v2.16B                        // ...................................l...................
        eor x26, x28, x21                                  // ...................................e...................
        eor v6.16B, v30.16B, v3.16B                        // ....................................l..................
        pmull2 v1.1q, v28.2d, v15.2d                       // ....................................*..................
        eor x7, x25, x21                                   // ....................................e..................
        aesr v4.16b, v20.16b                               // .....................................e.................
        eor v3.16B, v9.16B, v0.16B                         // .....................................l.................
        orr x24, x12, x22, lsl #32                         // .....................................e.................
        aese v31.16b, v27.16b                              // ......................................*................
        eor v2.16B, v6.16B, v10.16B                        // ......................................l................
        ldp x29, x25, [x0], #(4*16)                        // ......................................e................
        aesr v4.16b, v21.16b                               // .......................................e...............
        aesr v11.16b, v21.16b                              // ........................................*..............
        eor v9.16B, v2.16B, v3.16B                         // ........................................l..............
        ldr q6, [sp, #STACK_BASE_AES_ST + 16]              // .........................................e............. // @slothy:reads=stack_1
        aesr v4.16b, v22.16b                               // .........................................e.............
        mov d0, v28.d[1]                                   // ..........................................*............
        pmull v10.1q, v9.1d, v7.1d                         // ..........................................l............
        eor x29, x29, x20                                  // ..........................................e............
        ext v30.16B, v9.16B, v9.16B, #8                    // ...........................................l...........
        aesr v4.16b, v23.16b                               // ...........................................e...........
        eor v2.16B, v5.16B, v10.16B                        // ............................................l..........
        eor v29.16B, v29.16B, v31.16B                      // ............................................*..........
        eor x17, x25, x21                                  // ............................................e..........
        aesr v4.16b, v24.16b                               // .............................................e.........
        ldr q3, [sp, #STACK_BASE_AES_ST + 48]              // .............................................*......... // @slothy:reads=stack_3
        eor v5.16B, v2.16B, v30.16B                        // ..............................................l........
        aesr v11.16b, v22.16b                              // ..............................................*........
        stp x11, x24, [sp, #STACK_BASE_AES_ST]             // ..............................................e........ // @slothy:writes=stack_0
        aesr v4.16b, v25.16b                               // ...............................................e.......
        rev64 v2.16B, v29.16B                              // ...............................................*.......
        add w13, w13, #UNROLL                              // ...............................................e.......
        orr x23, x12, x10, lsl #32                         // ...............................................e.......
        ext v30.16B, v5.16B, v5.16B, #8                    // ................................................l......
        aesr v11.16b, v23.16b                              // ................................................*......
        stp x11, x23, [sp, #STACK_BASE_AES_ST + 48]        // ................................................e...... // @slothy:writes=stack_3
        eor v9.8B, v0.8B, v28.8B                           // .................................................*.....
        aesr v4.16b, v26.16b                               // .................................................e.....
        eor v5.16B, v2.16B, v30.16B                        // ..................................................*....
        aesr v11.16b, v24.16b                              // ..................................................*....
        aese v4.16b, v27.16b                               // ...................................................e...
        ldr q31, [sp, #STACK_BASE_AES_ST]                  // ...................................................e... // @slothy:reads=stack_0
        aesr v11.16b, v25.16b                              // ....................................................*..
        ext v10.16B, v5.16B, v5.16B, #8                    // ....................................................*..
        pmull2 v0.1q, v5.2d, v16.2d                        // .....................................................*.
        eor v30.16B, v6.16B, v4.16B                        // .....................................................e.
        aesr v11.16b, v26.16b                              // ......................................................*
        eor v10.16B, v10.16B, v5.16B                       // ......................................................*

        // original source code
        // ldp x22, x23, [x0, #(3*16)]                                  // .........e.............................................'........_......................................................_.......................................
        // add        w14, w13, #3                                      // e......................................................_......................................................_................................................
        // rev        w14, w14                                          // ...............................e.......................'.............................._......................................................_.................
        // orr        x14, x12, x14, lsl #32                            // ...............................................e.......'.............................................._......................................................_.
        // stp        x11, x14, [sp, #(STACK_BASE_AES_ST + 3*16)]       // ................................................e......'..............................................._.......................................................
        // ldr        q0, [sp, #(STACK_BASE_AES_ST + 3*16)]             // .._....................................................'.*......................................................_..............................................
        // aesr v0.16b, v18.16b                                         // ......_................................................'.....*......................................................_..........................................
        // aesr v0.16b, v19.16b                                         // ..........._...........................................'..........*......................................................_.....................................
        // aesr v0.16b, v20.16b                                         // ............._.........................................'............*......................................................_...................................
        // aesr v0.16b, v21.16b                                         // ................_......................................'...............*......................................................_................................
        // aesr v0.16b, v22.16b                                         // .................._....................................'.................*......................................................_..............................
        // aesr v0.16b, v23.16b                                         // ...................._..................................'...................*......................................................_............................
        // aesr v0.16b, v24.16b                                         // ......................_................................'.....................*......................................................_..........................
        // aesr v0.16b, v25.16b                                         // ........................_..............................'.......................*......................................................_........................
        // aesr v0.16b, v26.16b                                         // .........................._............................'.........................*......................................................_......................
        // aese v0.16b, v27.16b                                         // ............................_..........................'...........................*......................................................_....................
        // eor x22, x22, x20                                            // .............e.........................................'............_......................................................_...................................
        // eor x23, x23, x21                                            // ....................................e..................'..................................._......................................................_............
        // stp x22, x23, [sp, #(STACK_BASE_AES_ST + 3*16)]              // ..._...................................................'..*......................................................_.............................................
        // ldr q29, [sp, #(STACK_BASE_AES_ST + 3*16)]                   // ............................................._.........'............................................*......................................................_...
        // eor v0.16b, v29.16b, v0.16b                                  // ._.....................................................'_......................................................l...............................................
        // str q0, [x2, #(3*16)]                                        // ...._..................................................'..._......................................................l............................................
        // rev64 v0.16b, v0.16b                                         // ......_................................................'....._......................................................l..........................................
        // pmull   v8.1q, v0.1d, v12.1d                                 // ........._.............................................'........_......................................................l.......................................
        // pmull2  v9.1q, v0.2d, v12.2d                                 // ....................._.................................'...................._......................................................l...........................
        // mov     d11, v0.d[1]                                         // .........................._............................'........................._......................................................l......................
        // eor     v11.8b, v11.8b, v0.8b                                // ............................_..........................'..........................._......................................................l....................
        // pmull   v10.1q, v11.1d, v14.1d                               // .............................._........................'............................._......................................................l..................
        // ldp x22, x23, [x0, #(2*16)]                                  // ......................e................................'....................._......................................................_..........................
        // add        w14, w13, #2                                      // ........e..............................................'......._......................................................_........................................
        // rev        w14, w14                                          // ........................e..............................'......................._......................................................_........................
        // orr        x14, x12, x14, lsl #32                            // _......................................................*......................................................_................................................
        // stp        x11, x14, [sp, #(STACK_BASE_AES_ST + 2*16)]       // ......._...............................................'......*......................................................_.........................................
        // ldr        q0, [sp, #(STACK_BASE_AES_ST + 2*16)]             // ..................._...................................'..................*......................................................_.............................
        // aesr v0.16b, v18.16b                                         // ........................._.............................'........................*......................................................_.......................
        // aesr v0.16b, v19.16b                                         // ..........................._...........................'..........................*......................................................_.....................
        // aesr v0.16b, v20.16b                                         // ................................_......................'...............................*......................................................_................
        // aesr v0.16b, v21.16b                                         // ........................................_..............'.......................................*......................................................_........
        // aesr v0.16b, v22.16b                                         // .............................................._........'.............................................*......................................................_..
        // aesr v0.16b, v23.16b                                         // ................................................_......'...............................................*.......................................................
        // aesr v0.16b, v24.16b                                         // .................................................._....'.................................................*.....................................................
        // aesr v0.16b, v25.16b                                         // ...................................................._..'...................................................*...................................................
        // aesr v0.16b, v26.16b                                         // ......................................................_'.....................................................*.................................................
        // aese v0.16b, v27.16b                                         // ...._..................................................'..._......................................................l............................................
        // eor x22, x22, x20                                            // ........._.............................................'........*......................................................_.......................................
        // eor x23, x23, x21                                            // ...................................e...................'.................................._......................................................_.............
        // stp x22, x23, [sp, #(STACK_BASE_AES_ST + 2*16)]              // ................................._.....................'................................*......................................................_...............
        // ldr q29, [sp, #(STACK_BASE_AES_ST + 2*16)]                   // ......._...............................................'......_......................................................l.........................................
        // eor v0.16b, v29.16b, v0.16b                                  // ..........._...........................................'.........._......................................................l.....................................
        // str q0, [x2, #(2*16)]                                        // ................_......................................'..............._......................................................l................................
        // rev64   v0.16b, v0.16b                                       // ............._.........................................'............_......................................................l...................................
        // pmull   v11.1q, v0.1d, v13.1d                                // ..............._.......................................'.............._......................................................l.................................
        // eor     v8.16b, v8.16b, v11.16b                              // ................._.....................................'................_......................................................l...............................
        // pmull2  v11.1q, v0.2d, v13.2d                                // ......................._...............................'......................_......................................................l.........................
        // eor     v9.16b, v9.16b, v11.16b                              // ........................._.............................'........................_......................................................l.......................
        // ext     v11.16b, v0.16b, v0.16b, #8                          // ..............._.......................................'.............._......................................................l.................................
        // eor     v11.16b, v11.16b, v0.16b                             // ....................._.................................'...................._......................................................l...........................
        // pmull2  v11.1q, v11.2d, v14.2d                               // ............................._.........................'............................_......................................................l...................
        // eor     v10.16b, v10.16b, v11.16b                            // ................................_......................'..............................._......................................................l................
        // ldp x22, x23, [x0, #(1*16)]                                  // .e.....................................................'_......................................................_...............................................
        // add        w14, w13, #1                                      // ......e................................................'....._......................................................_..........................................
        // rev        w14, w14                                          // .......e...............................................'......_......................................................_.........................................
        // orr        x14, x12, x14, lsl #32                            // ........e..............................................'......._......................................................_........................................
        // stp        x11, x14, [sp, #(STACK_BASE_AES_ST + 1*16)]       // ..............e........................................'............._......................................................_..................................
        // ldr        q0, [sp, #(STACK_BASE_AES_ST + 1*16)]             // .............................e.........................'............................_......................................................_...................
        // aesr v0.16b, v18.16b                                         // .................................e.....................'................................_......................................................_...............
        // aesr v0.16b, v19.16b                                         // ...................................e...................'.................................._......................................................_.............
        // aesr v0.16b, v20.16b                                         // .....................................e.................'...................................._......................................................_...........
        // aesr v0.16b, v21.16b                                         // .......................................e...............'......................................_......................................................_.........
        // aesr v0.16b, v22.16b                                         // .........................................e.............'........................................_......................................................_.......
        // aesr v0.16b, v23.16b                                         // ...........................................e...........'.........................................._......................................................_.....
        // aesr v0.16b, v24.16b                                         // .............................................e.........'............................................_......................................................_...
        // aesr v0.16b, v25.16b                                         // ...............................................e.......'.............................................._......................................................_.
        // aesr v0.16b, v26.16b                                         // .................................................e.....'................................................_......................................................
        // aese v0.16b, v27.16b                                         // ...................................................e...'.................................................._....................................................
        // eor x22, x22, x20                                            // ........e..............................................'......._......................................................_........................................
        // eor x23, x23, x21                                            // ......e................................................'....._......................................................_..........................................
        // stp x22, x23, [sp, #(STACK_BASE_AES_ST + 1*16)]              // ..............................e........................'............................._......................................................_..................
        // ldr q29, [sp, #(STACK_BASE_AES_ST + 1*16)]                   // .........................................e.............'........................................_......................................................_.......
        // eor v0.16b, v29.16b, v0.16b                                  // .....................................................e.'...................................................._..................................................
        // str q0, [x2, #(1*16)]                                        // ............_..........................................'...........*......................................................_....................................
        // rev64   v0.16b, v0.16b                                       // _......................................................*......................................................_................................................
        // pmull   v11.1q, v0.1d, v15.1d                                // _......................................................_......................................................l................................................
        // eor     v8.16b, v8.16b, v11.16b                              // ...................._..................................'..................._......................................................l............................
        // pmull2  v11.1q, v0.2d, v15.2d                                // ...................................._..................'...................................*......................................................_............
        // eor     v9.16b, v9.16b, v11.16b                              // ..........................._...........................'.........................._......................................................l.....................
        // mov     d11, v0.d[1]                                         // .........................................._............'.........................................*......................................................_......
        // eor     v11.8b, v11.8b, v0.8b                                // ................................................._.....'................................................*......................................................
        // pmull   v11.1q, v11.1d, v17.1d                               // ..............................._.......................'.............................._......................................................l.................
        // eor     v10.16b, v10.16b, v11.16b                            // .................................._....................'................................._......................................................l..............
        // ldp x22, x23, [x0], #(4*16)                                  // ......................................e................'....................................._......................................................_..........
        // add        w14, w13, #0                                      // ..................e....................................'................._......................................................_..............................
        // rev        w14, w14                                          // ................................e......................'..............................._......................................................_................
        // orr        x14, x12, x14, lsl #32                            // .....................................e.................'...................................._......................................................_...........
        // stp        x11, x14, [sp, #(STACK_BASE_AES_ST + 0*16)]       // ..............................................e........'............................................._......................................................_..
        // ldr        q0, [sp, #(STACK_BASE_AES_ST + 0*16)]             // ...................................................e...'.................................................._....................................................
        // aesr v0.16b, v18.16b                                         // ._.....................................................'*......................................................_...............................................
        // aesr v0.16b, v19.16b                                         // ..._...................................................'..*......................................................_.............................................
        // aesr v0.16b, v20.16b                                         // ....._.................................................'....*......................................................_...........................................
        // aesr v0.16b, v21.16b                                         // ......._...............................................'......*......................................................_.........................................
        // aesr v0.16b, v22.16b                                         // .........._............................................'.........*......................................................_......................................
        // aesr v0.16b, v23.16b                                         // ............_..........................................'...........*......................................................_....................................
        // aesr v0.16b, v24.16b                                         // .............._........................................'.............*......................................................_..................................
        // aesr v0.16b, v25.16b                                         // ................._.....................................'................*......................................................_...............................
        // aesr v0.16b, v26.16b                                         // ..................._...................................'..................*......................................................_.............................
        // aese v0.16b, v27.16b                                         // ......................................_................'.....................................*......................................................_..........
        // eor x22, x22, x20                                            // ..........................................e............'........................................._......................................................_......
        // eor x23, x23, x21                                            // ............................................e..........'..........................................._......................................................_....
        // stp x22, x23, [sp, #(STACK_BASE_AES_ST + 0*16)]              // ....._.................................................'....*......................................................_...........................................
        // ldr q29, [sp, #(STACK_BASE_AES_ST + 0*16)]                   // ..............................._.......................'..............................*......................................................_.................
        // eor v0.16b, v29.16b, v0.16b                                  // ............................................_..........'...........................................*......................................................_....
        // str q0, [x2], #(4*16)                                        // ....._.................................................'...._......................................................l...........................................
        // rev64   v0.16b, v0.16b                                       // ..............................................._.......'..............................................*......................................................_.
        // eor   v0.16b, v0.16b, v30.16b                                // .................................................._....'.................................................*.....................................................
        // pmull   v11.1q, v0.1d, v16.1d                                // .._....................................................'._......................................................l..............................................
        // eor     v8.16b, v8.16b, v11.16b                              // ......................._...............................'......................_......................................................l.........................
        // pmull2  v11.1q, v0.2d, v16.2d                                // ....................................................._.'....................................................*..................................................
        // eor     v9.16b, v9.16b, v11.16b                              // .............................._........................'............................._......................................................l..................
        // ext     v11.16b, v0.16b, v0.16b, #8                          // ...................................................._..'...................................................*...................................................
        // eor     v11.16b, v11.16b, v0.16b                             // ......................................................_'.....................................................*.................................................
        // pmull2  v11.1q, v11.2d, v17.2d                               // ........_..............................................'......._......................................................l........................................
        // eor     v10.16b, v10.16b, v11.16b                            // ...................................._..................'..................................._......................................................l............
        // eor        v0.16b, v8.16b,  v9.16b                           // ..................................._...................'.................................._......................................................l.............
        // pmull      v1.1q,  v9.1d,   v7.1d                            // .................................._....................'................................._......................................................l..............
        // ext        v9.16b,    v9.16b,  v9.16b, #8                    // ................................._.....................'................................_......................................................l...............
        // eor        v10.16b,   v10.16b, v0.16b                        // ......................................_................'....................................._......................................................l..........
        // eor        v1.16b, v9.16b,  v1.16b                           // ....................................._.................'...................................._......................................................l...........
        // eor        v10.16b,   v10.16b, v1.16b                        // ........................................_..............'......................................._......................................................l........
        // pmull      v9.1q,     v10.1d,  v7.1d                         // .........................................._............'........................................._......................................................l......
        // eor        v8.16b,    v8.16b,  v9.16b                        // ............................................_..........'..........................................._......................................................l....
        // ext        v10.16b,   v10.16b, v10.16b, #8                   // ..........................................._...........'.........................................._......................................................l.....
        // eor        v30.16b,     v8.16b,  v10.16b                     // .............................................._........'............................................._......................................................l..
        // ext        v30.16b, v30.16b, v30.16b, #8                     // ................................................_......'..............................................._......................................................l
        // add w13, w13, #UNROLL                                        // ...............................................e.......'.............................................._......................................................_.

        sub count, count, #1
        cbnz count, Lloop_unrolled_start
Lloop_unrolled_start_postamble:// end of loop kernel
                                                           // Instructions:    136
                                                           // Expected cycles: 73
                                                           // Expected IPC:    1.86
                                                           // ------------------------- expected cycle count ------------------------->
                                                           // 0                        25                       50
                                                           // |------------------------|------------------------|----------------------
        ldr q2, [sp, #STACK_BASE_AES_ST + 48]              // *........................................................................ // @slothy:reads=stack_3
        aesr v31.16b, v18.16b                              // *........................................................................
        stp x29, x17, [sp, #STACK_BASE_AES_ST]             // *........................................................................ // @slothy:writes=stack_0
        orr x28, x12, x8, lsl #32                          // *........................................................................
        eor v4.16B, v3.16B, v8.16B                         // .*.......................................................................
        aese v11.16b, v27.16b                              // .*.......................................................................
        stp x19, x7, [sp, #STACK_BASE_AES_ST + 48]         // .*....................................................................... // @slothy:writes=stack_3
        eor x30, x27, x20                                  // .*.......................................................................
        ldr q8, [sp, #STACK_BASE_AES_ST + 32]              // ..*...................................................................... // @slothy:reads=stack_2
        aesr v31.16b, v19.16b                              // ..*......................................................................
        str q29, [x2], #(4*16)                             // ...*.....................................................................
        pmull v3.1q, v28.1d, v15.1d                        // ...*.....................................................................
        rev64 v6.16B, v4.16B                               // ....*....................................................................
        aesr v31.16b, v20.16b                              // ....*....................................................................
        stp x11, x28, [sp, #STACK_BASE_AES_ST + 32]        // ....*.................................................................... // @slothy:writes=stack_2
        aesr v2.16b, v18.16b                               // .....*...................................................................
        str q4, [x2, #-16]                                 // .....*...................................................................
        eor v8.16B, v8.16B, v11.16B                        // ......*..................................................................
        aesr v31.16b, v21.16b                              // ......*..................................................................
        pmull v9.1q, v9.1d, v17.1d                         // .......*.................................................................
        mov d29, v6.d[1]                                   // .......*.................................................................
        aesr v31.16b, v22.16b                              // ........*................................................................
        rev64 v11.16B, v8.16B                              // ........*................................................................
        pmull v5.1q, v5.1d, v16.1d                         // .........*...............................................................
        eor v29.8B, v29.8B, v6.8B                          // .........*...............................................................
        ext v4.16B, v11.16B, v11.16B, #8                   // ..........*..............................................................
        aesr v31.16b, v23.16b                              // ..........*..............................................................
        pmull2 v10.1q, v10.2d, v17.2d                      // ...........*.............................................................
        str q30, [x2, #16]                                 // ...........*.............................................................
        eor v4.16B, v4.16B, v11.16B                        // ............*............................................................
        pmull v28.1q, v29.1d, v14.1d                       // ............*............................................................
        rev64 v30.16B, v30.16B                             // .............*...........................................................
        pmull2 v29.1q, v11.2d, v13.2d                      // .............*...........................................................
        pmull2 v4.1q, v4.2d, v14.2d                        // ..............*..........................................................
        str q8, [x2, #-32]                                 // ..............*..........................................................
        pmull2 v8.1q, v6.2d, v12.2d                        // ...............*.........................................................
        eor v28.16B, v28.16B, v4.16B                       // ................*........................................................
        aesr v31.16b, v24.16b                              // ................*........................................................
        eor v29.16B, v8.16B, v29.16B                       // .................*.......................................................
        pmull v4.1q, v6.1d, v12.1d                         // .................*.......................................................
        aesr v31.16b, v25.16b                              // ..................*......................................................
        eor v8.16B, v28.16B, v9.16B                        // ..................*......................................................
        aesr v2.16b, v19.16b                               // ...................*.....................................................
        ldr q9, [sp, #STACK_BASE_AES_ST + 32]              // ...................*..................................................... // @slothy:reads=stack_2
        stp x30, x26, [sp, #STACK_BASE_AES_ST + 32]        // ...................*..................................................... // @slothy:writes=stack_2
        pmull v6.1q, v11.1d, v13.1d                        // ....................*....................................................
        eor v11.16B, v29.16B, v1.16B                       // ....................*....................................................
        ldr q28, [sp, #STACK_BASE_AES_ST]                  // .....................*................................................... // @slothy:reads=stack_0
        aesr v2.16b, v20.16b                               // .....................*...................................................
        eor v29.16B, v4.16B, v6.16B                        // ......................*..................................................
        aesr v31.16b, v26.16b                              // ......................*..................................................
        aesr v9.16b, v18.16b                               // .......................*.................................................
        eor v1.16B, v11.16B, v0.16B                        // .......................*.................................................
        eor v6.16B, v29.16B, v3.16B                        // ........................*................................................
        aesr v2.16b, v21.16b                               // ........................*................................................
        ext v3.16B, v1.16B, v1.16B, #8                     // .........................*...............................................
        aesr v9.16b, v19.16b                               // .........................*...............................................
        eor v0.16B, v6.16B, v5.16B                         // ..........................*..............................................
        aese v31.16b, v27.16b                              // ..........................*..............................................
        eor v10.16B, v8.16B, v10.16B                       // ...........................*.............................................
        aesr v9.16b, v20.16b                               // ...........................*.............................................
        pmull v11.1q, v1.1d, v7.1d                         // ............................*............................................
        eor v28.16B, v28.16B, v31.16B                      // ............................*............................................
        aesr v9.16b, v21.16b                               // .............................*...........................................
        eor v8.16B, v0.16B, v1.16B                         // .............................*...........................................
        rev64 v5.16B, v28.16B                              // ..............................*..........................................
        aesr v2.16b, v22.16b                               // ..............................*..........................................
        eor v6.16B, v3.16B, v11.16B                        // ...............................*.........................................
        aesr v9.16b, v22.16b                               // ...............................*.........................................
        aesr v2.16b, v23.16b                               // ................................*........................................
        eor v11.16B, v10.16B, v8.16B                       // ................................*........................................
        str q28, [x2], #(4*16)                             // .................................*.......................................
        aesr v9.16b, v23.16b                               // .................................*.......................................
        eor v11.16B, v11.16B, v6.16B                       // ..................................*......................................
        aesr v2.16b, v24.16b                               // ..................................*......................................
        ldr q28, [sp, #STACK_BASE_AES_ST + 48]             // ...................................*..................................... // @slothy:reads=stack_3
        aesr v9.16b, v24.16b                               // ...................................*.....................................
        pmull v1.1q, v11.1d, v7.1d                         // ....................................*....................................
        ext v10.16B, v11.16B, v11.16B, #8                  // ....................................*....................................
        mov d11, v30.d[1]                                  // .....................................*...................................
        aesr v9.16b, v25.16b                               // .....................................*...................................
        aesr v2.16b, v25.16b                               // ......................................*..................................
        eor v31.16B, v0.16B, v1.16B                        // ......................................*..................................
        aesr v9.16b, v26.16b                               // .......................................*.................................
        ldr q1, [sp, #STACK_BASE_AES_ST + 32]              // .......................................*................................. // @slothy:reads=stack_2
        aesr v2.16b, v26.16b                               // ........................................*................................
        eor v0.16B, v31.16B, v10.16B                       // ........................................*................................
        aese v9.16b, v27.16b                               // .........................................*...............................
        eor v29.8B, v11.8B, v30.8B                         // .........................................*...............................
        ext v0.16B, v0.16B, v0.16B, #8                     // ..........................................*..............................
        aese v2.16b, v27.16b                               // ..........................................*..............................
        eor v1.16B, v1.16B, v9.16B                         // ...........................................*.............................
        pmull2 v9.1q, v30.2d, v15.2d                       // ...........................................*.............................
        eor v10.16B, v5.16B, v0.16B                        // ............................................*............................
        eor v2.16B, v28.16B, v2.16B                        // ............................................*............................
        pmull v8.1q, v30.1d, v15.1d                        // .............................................*...........................
        rev64 v4.16B, v1.16B                               // .............................................*...........................
        rev64 v3.16B, v2.16B                               // ..............................................*..........................
        pmull v31.1q, v4.1d, v13.1d                        // ...............................................*.........................
        ext v6.16B, v10.16B, v10.16B, #8                   // ...............................................*.........................
        mov d11, v3.d[1]                                   // ................................................*........................
        pmull2 v30.1q, v10.2d, v16.2d                      // ................................................*........................
        pmull v5.1q, v3.1d, v12.1d                         // .................................................*.......................
        ext v0.16B, v4.16B, v4.16B, #8                     // .................................................*.......................
        eor v28.8B, v11.8B, v3.8B                          // ..................................................*......................
        pmull2 v11.1q, v3.2d, v12.2d                       // ..................................................*......................
        eor v3.16B, v5.16B, v31.16B                        // ...................................................*.....................
        pmull2 v31.1q, v4.2d, v13.2d                       // ...................................................*.....................
        eor v0.16B, v0.16B, v4.16B                         // ....................................................*....................
        pmull v5.1q, v29.1d, v17.1d                        // ....................................................*....................
        eor v11.16B, v11.16B, v31.16B                      // .....................................................*...................
        pmull v4.1q, v28.1d, v14.1d                        // .....................................................*...................
        eor v8.16B, v3.16B, v8.16B                         // ......................................................*..................
        pmull2 v31.1q, v0.2d, v14.2d                       // ......................................................*..................
        eor v3.16B, v11.16B, v9.16B                        // .......................................................*.................
        eor v28.16B, v6.16B, v10.16B                       // .......................................................*.................
        eor v11.16B, v4.16B, v31.16B                       // ........................................................*................
        pmull v9.1q, v10.1d, v16.1d                        // ........................................................*................
        pmull2 v6.1q, v28.2d, v17.2d                       // .........................................................*...............
        eor v30.16B, v3.16B, v30.16B                       // .........................................................*...............
        eor v29.16B, v8.16B, v9.16B                        // ..........................................................*..............
        eor v31.16B, v11.16B, v5.16B                       // ..........................................................*..............
        pmull v10.1q, v30.1d, v7.1d                        // ...........................................................*.............
        ext v11.16B, v30.16B, v30.16B, #8                  // ...........................................................*.............
        eor v3.16B, v31.16B, v6.16B                        // ............................................................*............
        eor v28.16B, v29.16B, v30.16B                      // ............................................................*............
        str q2, [x2, #-16]                                 // .............................................................*...........
        eor v9.16B, v11.16B, v10.16B                       // .............................................................*...........
        eor v31.16B, v3.16B, v28.16B                       // ..............................................................*..........
        eor v5.16B, v31.16B, v9.16B                        // ................................................................*........
        ext v11.16B, v5.16B, v5.16B, #8                    // ..................................................................*......
        pmull v6.1q, v5.1d, v7.1d                          // ..................................................................*......
        eor v31.16B, v29.16B, v6.16B                       // ....................................................................*....
        eor v29.16B, v31.16B, v11.16B                      // ......................................................................*..
        str q1, [x2, #-32]                                 // .......................................................................*.
        ext v30.16B, v29.16B, v29.16B, #8                  // ........................................................................*

        // original source code
        // pmull V<ssa_0>.1q, v28.1d, v15.1d                           // ...*.....................................................................
        // rev64 V<ssa_1>.16B, v30.16B                                 // .............*...........................................................
        // orr X<ssa_3>, x12, x8, lsl #32                              // *........................................................................
        // eor V<ssa_4>.16B, v3.16B, v8.16B                            // .*.......................................................................
        // aesr v31.16b, v18.16b                                       // *........................................................................
        // ldr Q<ssa_7>, [sp, #STACK_BASE_AES_ST + 48]                 // *........................................................................
        // pmull V<ssa_8>.1q, v5.1d, v16.1d                            // .........*...............................................................
        // aesr v31.16b, v19.16b                                       // ..*......................................................................
        // stp x19, x7, [sp, #STACK_BASE_AES_ST + 48]                  // .*.......................................................................
        // aese v11.16b, v27.16b                                       // .*.......................................................................
        // str Q<ssa_4>, [x2, #48]                                     // .....*...................................................................
        // str q29, [x2], #(4*16)                                      // ...*.....................................................................
        // aesr v31.16b, v20.16b                                       // ....*....................................................................
        // stp x29, x17, [sp, #STACK_BASE_AES_ST]                      // *........................................................................
        // aesr V<ssa_7>.16b, v18.16b                                  // .....*...................................................................
        // rev64 V<ssa_11>.16B, V<ssa_4>.16B                           // ....*....................................................................
        // ldr Q<ssa_14>, [sp, #STACK_BASE_AES_ST + 32]                // ..*......................................................................
        // aesr v31.16b, v21.16b                                       // ......*..................................................................
        // stp x11, X<ssa_3>, [sp, #STACK_BASE_AES_ST + 32]            // ....*....................................................................
        // pmull2 V<ssa_17>.1q, v10.2d, v17.2d                         // ...........*.............................................................
        // pmull V<ssa_21>.1q, V<ssa_11>.1d, v12.1d                    // .................*.......................................................
        // eor X<ssa_24>, x27, x20                                     // .*.......................................................................
        // aesr v31.16b, v22.16b                                       // ........*................................................................
        // aesr V<ssa_7>.16b, v19.16b                                  // ...................*.....................................................
        // eor V<ssa_25>.16B, V<ssa_14>.16B, v11.16B                   // ......*..................................................................
        // aesr v31.16b, v23.16b                                       // ..........*..............................................................
        // str q30, [x2, #16]                                          // ...........*.............................................................
        // rev64 V<ssa_26>.16B, V<ssa_25>.16B                          // ........*................................................................
        // aesr V<ssa_7>.16b, v20.16b                                  // .....................*...................................................
        // aesr v31.16b, v24.16b                                       // ................*........................................................
        // pmull V<ssa_29>.1q, V<ssa_26>.1d, v13.1d                    // ....................*....................................................
        // ext V<ssa_30>.16B, V<ssa_26>.16B, V<ssa_26>.16B, #8         // ..........*..............................................................
        // aesr V<ssa_7>.16b, v21.16b                                  // ........................*................................................
        // str Q<ssa_25>, [x2, #-32]                                   // ..............*..........................................................
        // aesr v31.16b, v25.16b                                       // ..................*......................................................
        // eor V<ssa_31>.16B, V<ssa_21>.16B, V<ssa_29>.16B             // ......................*..................................................
        // aesr V<ssa_7>.16b, v22.16b                                  // ..............................*..........................................
        // ldr Q<ssa_33>, [sp, #STACK_BASE_AES_ST + 32]                // ...................*.....................................................
        // aesr v31.16b, v26.16b                                       // ......................*..................................................
        // aesr V<ssa_7>.16b, v23.16b                                  // ................................*........................................
        // eor V<ssa_34>.16B, V<ssa_31>.16B, V<ssa_0>.16B              // ........................*................................................
        // eor V<ssa_35>.16B, V<ssa_30>.16B, V<ssa_26>.16B             // ............*............................................................
        // pmull2 V<ssa_36>.1q, V<ssa_11>.2d, v12.2d                   // ...............*.........................................................
        // aesr V<ssa_7>.16b, v24.16b                                  // ..................................*......................................
        // pmull2 V<ssa_39>.1q, V<ssa_26>.2d, v13.2d                   // .............*...........................................................
        // eor V<ssa_40>.16B, V<ssa_34>.16B, V<ssa_8>.16B              // ..........................*..............................................
        // aesr V<ssa_7>.16b, v25.16b                                  // ......................................*..................................
        // aesr V<ssa_33>.16b, v18.16b                                 // .......................*.................................................
        // eor V<ssa_42>.16B, V<ssa_36>.16B, V<ssa_39>.16B             // .................*.......................................................
        // aesr V<ssa_7>.16b, v26.16b                                  // ........................................*................................
        // mov D<ssa_43>, V<ssa_11>.d[1]                               // .......*.................................................................
        // aesr V<ssa_33>.16b, v19.16b                                 // .........................*...............................................
        // eor V<ssa_44>.16B, V<ssa_42>.16B, v1.16B                    // ....................*....................................................
        // aese V<ssa_7>.16b, v27.16b                                  // ..........................................*..............................
        // eor V<ssa_45>.8B, V<ssa_43>.8B, V<ssa_11>.8B                // .........*...............................................................
        // pmull2 V<ssa_46>.1q, V<ssa_35>.2d, v14.2d                   // ..............*..........................................................
        // pmull V<ssa_48>.1q, V<ssa_45>.1d, v14.1d                    // ............*............................................................
        // eor V<ssa_49>.16B, V<ssa_44>.16B, v0.16B                    // .......................*.................................................
        // pmull V<ssa_51>.1q, v9.1d, v17.1d                           // .......*.................................................................
        // ldr Q<ssa_52>, [sp, #STACK_BASE_AES_ST]                     // .....................*...................................................
        // aesr V<ssa_33>.16b, v20.16b                                 // ...........................*.............................................
        // eor V<ssa_54>.16B, V<ssa_48>.16B, V<ssa_46>.16B             // ................*........................................................
        // ext V<ssa_56>.16B, V<ssa_49>.16B, V<ssa_49>.16B, #8         // .........................*...............................................
        // stp X<ssa_24>, x26, [sp, #STACK_BASE_AES_ST + 32]           // ...................*.....................................................
        // eor V<ssa_58>.16B, V<ssa_54>.16B, V<ssa_51>.16B             // ..................*......................................................
        // pmull V<ssa_59>.1q, V<ssa_49>.1d, v7.1d                     // ............................*............................................
        // eor V<ssa_60>.16B, V<ssa_40>.16B, V<ssa_49>.16B             // .............................*...........................................
        // eor V<ssa_62>.16B, V<ssa_58>.16B, V<ssa_17>.16B             // ...........................*.............................................
        // pmull2 V<ssa_63>.1q, V<ssa_1>.2d, v15.2d                    // ...........................................*.............................
        // eor V<ssa_65>.16B, V<ssa_56>.16B, V<ssa_59>.16B             // ...............................*.........................................
        // aese v31.16b, v27.16b                                       // ..........................*..............................................
        // eor V<ssa_67>.16B, V<ssa_62>.16B, V<ssa_60>.16B             // ................................*........................................
        // aesr V<ssa_33>.16b, v21.16b                                 // .............................*...........................................
        // eor V<ssa_70>.16B, V<ssa_67>.16B, V<ssa_65>.16B             // ..................................*......................................
        // mov D<ssa_72>, V<ssa_1>.d[1]                                // .....................................*...................................
        // pmull V<ssa_73>.1q, V<ssa_70>.1d, v7.1d                     // ....................................*....................................
        // ext V<ssa_75>.16B, V<ssa_70>.16B, V<ssa_70>.16B, #8         // ....................................*....................................
        // eor V<ssa_76>.16B, V<ssa_40>.16B, V<ssa_73>.16B             // ......................................*..................................
        // eor V<ssa_77>.16B, V<ssa_52>.16B, v31.16B                   // ............................*............................................
        // ldr Q<ssa_79>, [sp, #STACK_BASE_AES_ST + 48]                // ...................................*.....................................
        // eor V<ssa_80>.16B, V<ssa_76>.16B, V<ssa_75>.16B             // ........................................*................................
        // aesr V<ssa_33>.16b, v22.16b                                 // ...............................*.........................................
        // rev64 V<ssa_82>.16B, V<ssa_77>.16B                          // ..............................*..........................................
        // ext V<ssa_85>.16B, V<ssa_80>.16B, V<ssa_80>.16B, #8         // ..........................................*..............................
        // aesr V<ssa_33>.16b, v23.16b                                 // .................................*.......................................
        // eor V<ssa_87>.8B, V<ssa_72>.8B, V<ssa_1>.8B                 // .........................................*...............................
        // eor V<ssa_88>.16B, V<ssa_82>.16B, V<ssa_85>.16B             // ............................................*............................
        // aesr V<ssa_33>.16b, v24.16b                                 // ...................................*.....................................
        // aesr V<ssa_33>.16b, v25.16b                                 // .....................................*...................................
        // ext V<ssa_90>.16B, V<ssa_88>.16B, V<ssa_88>.16B, #8         // ...............................................*.........................
        // pmull2 V<ssa_91>.1q, V<ssa_88>.2d, v16.2d                   // ................................................*........................
        // aesr V<ssa_33>.16b, v26.16b                                 // .......................................*.................................
        // eor V<ssa_93>.16B, V<ssa_90>.16B, V<ssa_88>.16B             // .......................................................*.................
        // pmull V<ssa_94>.1q, V<ssa_1>.1d, v15.1d                     // .............................................*...........................
        // eor V<ssa_97>.16B, V<ssa_79>.16B, V<ssa_7>.16B              // ............................................*............................
        // pmull V<ssa_100>.1q, V<ssa_88>.1d, v16.1d                   // ........................................................*................
        // aese V<ssa_33>.16b, v27.16b                                 // .........................................*...............................
        // str Q<ssa_97>, [x2, #48]                                    // .............................................................*...........
        // str Q<ssa_77>, [x2], #(4*16)                                // .................................*.......................................
        // rev64 V<ssa_103>.16B, V<ssa_97>.16B                         // ..............................................*..........................
        // ldr Q<ssa_106>, [sp, #STACK_BASE_AES_ST + 32]               // .......................................*.................................
        // pmull2 V<ssa_109>.1q, V<ssa_93>.2d, v17.2d                  // .........................................................*...............
        // pmull V<ssa_113>.1q, V<ssa_103>.1d, v12.1d                  // .................................................*.......................
        // eor V<ssa_117>.16B, V<ssa_106>.16B, V<ssa_33>.16B           // ...........................................*.............................
        // rev64 V<ssa_118>.16B, V<ssa_117>.16B                        // .............................................*...........................
        // pmull V<ssa_120>.1q, V<ssa_118>.1d, v13.1d                  // ...............................................*.........................
        // ext V<ssa_121>.16B, V<ssa_118>.16B, V<ssa_118>.16B, #8      // .................................................*.......................
        // str Q<ssa_117>, [x2, #-32]                                  // .......................................................................*.
        // eor V<ssa_122>.16B, V<ssa_113>.16B, V<ssa_120>.16B          // ...................................................*.....................
        // eor V<ssa_124>.16B, V<ssa_122>.16B, V<ssa_94>.16B           // ......................................................*..................
        // eor V<ssa_125>.16B, V<ssa_121>.16B, V<ssa_118>.16B          // ....................................................*....................
        // pmull2 V<ssa_126>.1q, V<ssa_103>.2d, v12.2d                 // ..................................................*......................
        // pmull2 V<ssa_128>.1q, V<ssa_118>.2d, v13.2d                 // ...................................................*.....................
        // eor V<ssa_129>.16B, V<ssa_124>.16B, V<ssa_100>.16B          // ..........................................................*..............
        // eor V<ssa_130>.16B, V<ssa_126>.16B, V<ssa_128>.16B          // .....................................................*...................
        // mov D<ssa_131>, V<ssa_103>.d[1]                             // ................................................*........................
        // eor V<ssa_132>.16B, V<ssa_130>.16B, V<ssa_63>.16B           // .......................................................*.................
        // eor V<ssa_133>.8B, V<ssa_131>.8B, V<ssa_103>.8B             // ..................................................*......................
        // pmull2 V<ssa_134>.1q, V<ssa_125>.2d, v14.2d                 // ......................................................*..................
        // pmull V<ssa_136>.1q, V<ssa_133>.1d, v14.1d                  // .....................................................*...................
        // eor V<ssa_137>.16B, V<ssa_132>.16B, V<ssa_91>.16B           // .........................................................*...............
        // pmull V<ssa_139>.1q, V<ssa_87>.1d, v17.1d                   // ....................................................*....................
        // eor V<ssa_142>.16B, V<ssa_136>.16B, V<ssa_134>.16B          // ........................................................*................
        // ext V<ssa_144>.16B, V<ssa_137>.16B, V<ssa_137>.16B, #8      // ...........................................................*.............
        // eor V<ssa_145>.16B, V<ssa_142>.16B, V<ssa_139>.16B          // ..........................................................*..............
        // pmull V<ssa_146>.1q, V<ssa_137>.1d, v7.1d                   // ...........................................................*.............
        // eor V<ssa_147>.16B, V<ssa_129>.16B, V<ssa_137>.16B          // ............................................................*............
        // eor V<ssa_148>.16B, V<ssa_145>.16B, V<ssa_109>.16B          // ............................................................*............
        // eor V<ssa_149>.16B, V<ssa_144>.16B, V<ssa_146>.16B          // .............................................................*...........
        // eor V<ssa_151>.16B, V<ssa_148>.16B, V<ssa_147>.16B          // ..............................................................*..........
        // eor V<ssa_154>.16B, V<ssa_151>.16B, V<ssa_149>.16B          // ................................................................*........
        // pmull V<ssa_157>.1q, V<ssa_154>.1d, v7.1d                   // ..................................................................*......
        // ext V<ssa_158>.16B, V<ssa_154>.16B, V<ssa_154>.16B, #8      // ..................................................................*......
        // eor V<ssa_159>.16B, V<ssa_129>.16B, V<ssa_157>.16B          // ....................................................................*....
        // eor V<ssa_160>.16B, V<ssa_159>.16B, V<ssa_158>.16B          // ......................................................................*..
        // ext v30.16B, V<ssa_160>.16B, V<ssa_160>.16B, #8             // ........................................................................*

        b Lloop_unrolled_start_end
Lloop_unrolled_start_iter_1:


        ldp x22, x23, [x0, #(3*16)]
        add        w14, w13, #3
        rev        w14, w14
        orr        x14, x12, x14, lsl #32
        stp        x11, x14, [sp, #(STACK_BASE_AES_ST + 3*16)] // @slothy:writes=stack_3
        ldr        q0, [sp, #(STACK_BASE_AES_ST + 3*16)]       // @slothy:reads=stack_3
        aesr v0.16b, v18.16b
        aesr v0.16b, v19.16b
        aesr v0.16b, v20.16b
        aesr v0.16b, v21.16b
        aesr v0.16b, v22.16b
        aesr v0.16b, v23.16b
        aesr v0.16b, v24.16b
        aesr v0.16b, v25.16b
        aesr v0.16b, v26.16b
        aese v0.16b, v27.16b
        eor x22, x22, x20
        eor x23, x23, x21
        stp x22, x23, [sp, #(STACK_BASE_AES_ST + 3*16)] // @slothy:writes=stack_3
        ldr q29, [sp, #(STACK_BASE_AES_ST + 3*16)]       // @slothy:reads=stack_3
        eor v0.16b, v29.16b, v0.16b
        str q0, [x2, #(3*16)]

        rev64 v0.16b, v0.16b
        // Low product
        pmull   v8.1q, v0.1d, v12.1d
        // High product
        pmull2  v9.1q, v0.2d, v12.2d
        // Middle product
        mov     d11, v0.d[1]
        eor     v11.8b, v11.8b, v0.8b
        pmull   v10.1q, v11.1d, v14.1d

        ldp x22, x23, [x0, #(2*16)]
        add        w14, w13, #2
        rev        w14, w14
        orr        x14, x12, x14, lsl #32
        stp        x11, x14, [sp, #(STACK_BASE_AES_ST + 2*16)] // @slothy:writes=stack_2
        ldr        q0, [sp, #(STACK_BASE_AES_ST + 2*16)]       // @slothy:reads=stack_2
        aesr v0.16b, v18.16b
        aesr v0.16b, v19.16b
        aesr v0.16b, v20.16b
        aesr v0.16b, v21.16b
        aesr v0.16b, v22.16b
        aesr v0.16b, v23.16b
        aesr v0.16b, v24.16b
        aesr v0.16b, v25.16b
        aesr v0.16b, v26.16b
        aese v0.16b, v27.16b
        eor x22, x22, x20
        eor x23, x23, x21
        stp x22, x23, [sp, #(STACK_BASE_AES_ST + 2*16)] // @slothy:writes=stack_2
        ldr q29, [sp, #(STACK_BASE_AES_ST + 2*16)]       // @slothy:reads=stack_2
        eor v0.16b, v29.16b, v0.16b
        str q0, [x2, #(2*16)]

        rev64   v0.16b, v0.16b
        // Low product
        pmull   v11.1q, v0.1d, v13.1d
        eor     v8.16b, v8.16b, v11.16b
        // High product
        pmull2  v11.1q, v0.2d, v13.2d
        eor     v9.16b, v9.16b, v11.16b
        // Middle product
        ext     v11.16b, v0.16b, v0.16b, #8
        eor     v11.16b, v11.16b, v0.16b
        pmull2  v11.1q, v11.2d, v14.2d
        eor     v10.16b, v10.16b, v11.16b

        ldp x22, x23, [x0, #(1*16)]
        add        w14, w13, #1
        rev        w14, w14
        orr        x14, x12, x14, lsl #32
        stp        x11, x14, [sp, #(STACK_BASE_AES_ST + 1*16)] // @slothy:writes=stack_1
        ldr        q0, [sp, #(STACK_BASE_AES_ST + 1*16)]       // @slothy:reads=stack_1
        aesr v0.16b, v18.16b
        aesr v0.16b, v19.16b
        aesr v0.16b, v20.16b
        aesr v0.16b, v21.16b
        aesr v0.16b, v22.16b
        aesr v0.16b, v23.16b
        aesr v0.16b, v24.16b
        aesr v0.16b, v25.16b
        aesr v0.16b, v26.16b
        aese v0.16b, v27.16b
        eor x22, x22, x20
        eor x23, x23, x21
        stp x22, x23, [sp, #(STACK_BASE_AES_ST + 1*16)] // @slothy:writes=stack_1
        ldr q29, [sp, #(STACK_BASE_AES_ST + 1*16)]       // @slothy:reads=stack_1
        eor v0.16b, v29.16b, v0.16b
        str q0, [x2, #(1*16)]

        rev64   v0.16b, v0.16b
        // Low product
        pmull   v11.1q, v0.1d, v15.1d
        eor     v8.16b, v8.16b, v11.16b
        // High product
        pmull2  v11.1q, v0.2d, v15.2d
        eor     v9.16b, v9.16b, v11.16b
        // Middle product
        mov     d11, v0.d[1]
        eor     v11.8b, v11.8b, v0.8b
        pmull   v11.1q, v11.1d, v17.1d
        eor     v10.16b, v10.16b, v11.16b

        ldp x22, x23, [x0], #(4*16)
        add        w14, w13, #0
        rev        w14, w14
        orr        x14, x12, x14, lsl #32
        stp        x11, x14, [sp, #(STACK_BASE_AES_ST + 0*16)] // @slothy:writes=stack_0
        ldr        q0, [sp, #(STACK_BASE_AES_ST + 0*16)]       // @slothy:reads=stack_0
        aesr v0.16b, v18.16b
        aesr v0.16b, v19.16b
        aesr v0.16b, v20.16b
        aesr v0.16b, v21.16b
        aesr v0.16b, v22.16b
        aesr v0.16b, v23.16b
        aesr v0.16b, v24.16b
        aesr v0.16b, v25.16b
        aesr v0.16b, v26.16b
        aese v0.16b, v27.16b
        eor x22, x22, x20
        eor x23, x23, x21
        stp x22, x23, [sp, #(STACK_BASE_AES_ST + 0*16)] // @slothy:writes=stack_0
        ldr q29, [sp, #(STACK_BASE_AES_ST + 0*16)]       // @slothy:reads=stack_0
        eor v0.16b, v29.16b, v0.16b
        str q0, [x2], #(4*16)

        rev64   v0.16b, v0.16b
        eor   v0.16b, v0.16b, v30.16b
        // Low product
        pmull   v11.1q, v0.1d, v16.1d
        eor     v8.16b, v8.16b, v11.16b
        // High product
        pmull2  v11.1q, v0.2d, v16.2d
        eor     v9.16b, v9.16b, v11.16b
        // Middle product
        ext     v11.16b, v0.16b, v0.16b, #8
        eor     v11.16b, v11.16b, v0.16b
        pmull2  v11.1q, v11.2d, v17.2d
        eor     v10.16b, v10.16b, v11.16b
        eor        v0.16b, v8.16b,  v9.16b
        pmull      v1.1q,  v9.1d,   v7.1d
        ext        v9.16b,    v9.16b,  v9.16b, #8
        eor        v10.16b,   v10.16b, v0.16b
        eor        v1.16b, v9.16b,  v1.16b
        eor        v10.16b,   v10.16b, v1.16b
        pmull      v9.1q,     v10.1d,  v7.1d
        eor        v8.16b,    v8.16b,  v9.16b
        ext        v10.16b,   v10.16b, v10.16b, #8
        eor        v30.16b,     v8.16b,  v10.16b
        ext        v30.16b, v30.16b, v30.16b, #8

        add w13, w13, #UNROLL
Lloop_unrolled_start_iter_1_end:
Lloop_unrolled_start_end:
Lloop_unrolled_end:

        cbz remainder, Lloop_1x_end
Lloop_1x_start:

        ldp plain_lo, plain_hi, [input], #16
        aes_full_block aes_st, plain, res, 0
        str res_q, [output], #16
        ghash_init_with_tag_0 res, Ht1, Ht12, tag

        ghash_finalize tag

        add ctr, ctr, #1
        sub remainder, remainder, #1
        cbnz remainder, Lloop_1x_start
Lloop_1x_end:

        // Return number of bytes processed
        mov x0, byte_len
        // Store new authentication tag
        rev64 tag.16b, tag.16b
        str tag_q, [tag_ptr]

        // Store updated counter
        // rev32 rtmp_ctr.16b, rtmp_ctr.16b
        // str rtmp_ctr_q, [ivec]
        rev ctr_tmp_w, ctr
        str ctr_tmp_w, [ivec, #12]

        restore_vregs
        restore_gprs

Lenc_postamble_end:
        add sp, sp, #STACK_SIZE

        ret

#endif
#endif  // !OPENSSL_NO_ASM && defined(__AARCH64EL__) && defined(__APPLE__)
#if defined(__ELF__)
// See https: // www.airs.com/blog/archives/518.
.section .note.GNU-stack,"",%progbits
#endif