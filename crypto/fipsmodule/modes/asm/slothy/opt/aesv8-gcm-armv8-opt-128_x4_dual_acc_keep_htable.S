// Copyright (c) 2022, ARM Inc.

// Permission to use, copy, modify, and/or distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.

// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
// SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
// OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
// CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. */

// Author: Hanno Becker <hannobecker@posteo.de>

// This file was derived from the assembly generated from aesv8-gcm-armv8.pl,
// written by Fangming Fang <fangming.fang@arm.com> for the OpenSSL project,
// and derived from https: // github.com/ARM-software/AArch64cryptolib, original
// author Samuel Lee <Samuel.Lee@arm.com>.

// The code below is a 'clean' AArch64 implementation of AES-GCM emphasizing
// the logic of the computation. It is meant as the input to manual audits /
// formal verification, as well as automated micro-optimization such as done
// by the SLOTHY superoptimizer (https: // github.com/slothy-optimizer/slothy).

#if !defined(__has_feature)
#define __has_feature(x) 0
#endif
#if __has_feature(memory_sanitizer) && !defined(OPENSSL_NO_ASM)
#define OPENSSL_NO_ASM
#endif

#include <openssl/asm_base.h>

#if !defined(OPENSSL_NO_ASM) && defined(__AARCH64EL__)
#if defined(__ELF__)
#include <openssl/boringssl_prefix_symbols_asm.h>
#include <openssl/arm_arch.h>
.arch   armv8-a+crypto
.text
.globl  aes_gcm_enc_kernel_slothy_base_128
.hidden aes_gcm_enc_kernel_slothy_base_128
.type   aes_gcm_enc_kernel_slothy_base_128,%function
#elif defined(__APPLE__)
#if defined(BORINGSSL_PREFIX)
#include <boringssl_prefix_symbols_asm.h>
#endif
#include <openssl/arm_arch.h>
.text
.globl	_aes_gcm_enc_kernel_slothy_base_128
.private_extern	_aes_gcm_enc_kernel_slothy_base_128
#else
#error Unknown configuration
#endif

#if __ARM_MAX_ARCH__ >= 8

// Arguments
input    .req x0
len_bits .req x1
output   .req x2
tag_ptr  .req x3
ivec     .req x4
key      .req x5
Htable   .req x6

byte_len .req x15

constant_temp .req x25

count           .req x1
full_blocks     .req x7
remainder       .req x9
unroll          .req x10

aes_st0    .req v0
aes_st0_q  .req q0

aes_st1    .req v2
aes_st1_q  .req q2

res0       .req v0
res0_q     .req q0

res1       .req v2
res1_q     .req q2

ghash_hi    .req v9
ghash_lo    .req v8
ghash_mid   .req v10
ghash_mid_d .req d10

ghash_tmp   .req v11
ghash_tmp_d .req d11

ghash_mod   .req v7
ghash_mod_d .req d7

modulo_tmp0 .req v0
modulo_tmp1 .req v1

Ht1q    .req q12
Ht2q    .req q13
Ht12q   .req q14

Ht1    .req v12
Ht2    .req v13
Ht12   .req v14

Ht3q    .req q15
Ht4q    .req q16
Ht34q   .req q17

Ht3    .req v15
Ht4    .req v16
Ht34   .req v17

rk0q   .req q18
rk1q   .req q19
rk2q   .req q20
rk3q   .req q21
rk4q   .req q22
rk5q   .req q23
rk6q   .req q24
rk7q   .req q25
rk8q   .req q26
rk9q   .req q27
rk10q  .req q28

rk0    .req v18
rk1    .req v19
rk2    .req v20
rk3    .req v21
rk4    .req v22
rk5    .req v23
rk6    .req v24
rk7    .req v25
rk8    .req v26
rk9    .req v27
rk10   .req v28

plain   .req v29
plain_q .req q29

rctr_inc   .req v30
rtmp_ctr   .req v31
rtmp_ctr_q .req q31

tag    .req v11
tag_q  .req q11

#define UNROLL 4

#define STACK_SIZE_GPRS  (6*16)
#define STACK_SIZE_VREGS (4*16)
#define STACK_SIZE  (STACK_SIZE_GPRS + STACK_SIZE_VREGS)

#define STACK_BASE_GPRS  (0)
#define STACK_BASE_VREGS (STACK_SIZE_GPRS)

/********************************************************************/
/*                 Generic preamble/postamble macros                */
/********************************************************************/

.macro save_vregs
        stp  d8,  d9, [sp, #(STACK_BASE_VREGS + 16*0)]
        stp d10, d11, [sp, #(STACK_BASE_VREGS + 16*1)]
        stp d12, d13, [sp, #(STACK_BASE_VREGS + 16*2)]
        stp d14, d15, [sp, #(STACK_BASE_VREGS + 16*3)]
.endm

.macro restore_vregs
        ldp  d8,  d9, [sp, #(STACK_BASE_VREGS + 16*0)]
        ldp d10, d11, [sp, #(STACK_BASE_VREGS + 16*1)]
        ldp d12, d13, [sp, #(STACK_BASE_VREGS + 16*2)]
        ldp d14, d15, [sp, #(STACK_BASE_VREGS + 16*3)]
.endm

.macro save_gprs
        stp x19, x20, [sp, #(STACK_BASE_GPRS + 16*0)]
        stp x21, x22, [sp, #(STACK_BASE_GPRS + 16*1)]
        stp x23, x24, [sp, #(STACK_BASE_GPRS + 16*2)]
        stp x25, x26, [sp, #(STACK_BASE_GPRS + 16*3)]
        stp x27, x28, [sp, #(STACK_BASE_GPRS + 16*4)]
        stp x29, x30, [sp, #(STACK_BASE_GPRS + 16*5)]
.endm

.macro restore_gprs
        ldp x19, x20, [sp, #(STACK_BASE_GPRS + 16*0)]
        ldp x21, x22, [sp, #(STACK_BASE_GPRS + 16*1)]
        ldp x23, x24, [sp, #(STACK_BASE_GPRS + 16*2)]
        ldp x25, x26, [sp, #(STACK_BASE_GPRS + 16*3)]
        ldp x27, x28, [sp, #(STACK_BASE_GPRS + 16*4)]
        ldp x29, x30, [sp, #(STACK_BASE_GPRS + 16*5)]
.endm

.macro prepare_loop_counts
        mov  unroll, #UNROLL
        lsr  full_blocks, byte_len, #4
        udiv count, full_blocks, unroll
        msub remainder, count, unroll, full_blocks
.endm

/********************************************************************/
/*                       AES related macros                         */
/********************************************************************/

.macro load_iv
        ldr     rtmp_ctr_q, [ivec]

 mov	constant_temp, #0x100000000   // set up counter increment
 movi	rctr_inc.16b,  #0x0
 fmov	rctr_inc.d[1], constant_temp

        rev32   rtmp_ctr.16b, rtmp_ctr.16b
.endm

.macro aes_ctr_inc
        add    rtmp_ctr.4s, rtmp_ctr.4s, rctr_inc.4s
.endm

.macro next_ctr_init_aes aes_st
        rev32  \aes_st\().16b, rtmp_ctr.16b
        aes_ctr_inc
.endm

// A single AES round
// Prevent SLOTHY from unfolding because uArchs tend to fuse AESMC+AESE
.macro aesr data, key // @slothy:no-unfold
        aese  \data, \key
        aesmc \data, \data
.endm

.macro aesr_0_8 data, key
        aesr \data\().16b, \key\()0.16b
        aesr \data\().16b, \key\()1.16b
        aesr \data\().16b, \key\()2.16b
        aesr \data\().16b, \key\()3.16b
        aesr \data\().16b, \key\()4.16b
        aesr \data\().16b, \key\()5.16b
        aesr \data\().16b, \key\()6.16b
        aesr \data\().16b, \key\()7.16b
        aesr \data\().16b, \key\()8.16b
.endm

.macro aesr_9_10 data, key
        aesr \data\().16b, \key\()9.16b
        aesr \data\().16b, \key\()10.16b
.endm

.macro aesr_11_12 data, key
        aesr \data\().16b, \key\()11.16b
        aesr \data\().16b, \key\()12.16b
.endm

// Destructs inA
.macro eor3 out, inA, inB, inC
        eor \inA, \inA, \inB
        eor \out, \inA, \inC
.endm

.macro aesr_final aes_st, plain, out
        aese \aes_st\().16b, rk9.16b
        eor3 \out\().16b, \plain\().16b, rk10.16b, \aes_st\().16b
.endm

.macro aes_full_block aes_st, input, output
        next_ctr_init_aes \aes_st
        aesr_0_8 \aes_st\(), rk
        aesr_final \aes_st, \input, \output
.endm

.macro load_round_key i
        ldr rk\()\i\()q, [key, #((\i)*16)]
.endm

.macro load_round_keys
        load_round_key 0
        load_round_key 1
        load_round_key 2
        load_round_key 3
        load_round_key 4
        load_round_key 5
        load_round_key 6
        load_round_key 7
        load_round_key 8
        load_round_key 9
        load_round_key 10
.endm

/********************************************************************/
/*       Loading of H-table (precomputed H-powers for GHASH)        */
/********************************************************************/

// This has to be synchronized with the H-table generation

.macro load_h1 dst, dst_q
        ldr \dst_q, [Htable]
.endm

.macro load_h2 dst, dst_q
        ldr \dst_q, [Htable, #32]
.endm

.macro load_h3 dst, dst_q
        ldr \dst_q, [Htable, #48]
.endm

.macro load_h4 dst, dst_q
        ldr \dst_q, [Htable, #80]
.endm

.macro load_h12 dst, dst_q
        ldr \dst_q, [Htable, #16]
.endm

.macro load_h34 dst, dst_q
        ldr \dst_q, [Htable, #64]
.endm

.macro load_full_htable
        load_h1  Ht1,  Ht1q
        load_h2  Ht2,  Ht2q
        load_h3  Ht3,  Ht3q
        load_h4  Ht4,  Ht4q
        load_h12 Ht12, Ht12q
        load_h34 Ht34, Ht34q
.endm

.macro load_htable_12
        load_h1  Ht1,  Ht1q
        load_h2  Ht2,  Ht2q
        load_h12 Ht12, Ht12q
.endm

.macro load_htable_34
        load_h3  Ht3,  Ht3q
        load_h4  Ht4,  Ht4q
        load_h34 Ht34, Ht34q
.endm

/********************************************************************/
/*                    Macros for GHASH udpate                       */
/********************************************************************/

.macro ghash_init_pair inputa, inputb, Ha, Hb, Hk_mid
        rev64 \inputa\().16b, \inputa\().16b
        rev64 \inputb\().16b, \inputb\().16b
        eor   \inputa\().16b, \inputa\().16b, tag.16b

        // Low product
        pmull   ghash_lo.1q,  \inputa\().1d, \Ha\().1d
        pmull   ghash_tmp.1q, \inputb\().1d, \Hb\().1d
        eor     ghash_lo.16b, ghash_lo.16b, ghash_tmp.16b
        // High product
        pmull2  ghash_hi.1q, \inputa\().2d, \Ha\().2d
        pmull2  ghash_tmp.1q, \inputb\().2d, \Hb\().2d
        eor     ghash_hi.16b, ghash_hi.16b, ghash_tmp.16b
        // Middle product
        trn1    ghash_tmp.2d,  \inputb\().2d, \inputa\().2d
        trn2    \inputb\().2d, \inputb\().2d, \inputa\().2d
        eor     ghash_tmp.16b, ghash_tmp.16b, \inputb\().16b
        pmull2  ghash_mid.1q, ghash_tmp.2d, \Hk_mid\().2d
        pmull   ghash_tmp.1q, ghash_tmp.1d, \Hk_mid\().1d
        eor     ghash_mid.16b, ghash_mid.16b, ghash_tmp.16b
.endm

.macro ghash_acc_pair inputa, inputb, Ha, Hb, Hk_mid
        rev64 \inputa\().16b, \inputa\().16b
        rev64 \inputb\().16b, \inputb\().16b

        // Low product
        pmull   ghash_tmp.1q, \inputa\().1d, \Ha\().1d
        eor     ghash_lo.16b, ghash_lo.16b, ghash_tmp.16b
        pmull   ghash_tmp.1q, \inputb\().1d, \Hb\().1d
        eor     ghash_lo.16b, ghash_lo.16b, ghash_tmp.16b
        // High product
        pmull2  ghash_tmp.1q, \inputa\().2d, \Ha\().2d
        eor     ghash_hi.16b, ghash_hi.16b, ghash_tmp.16b
        pmull2  ghash_tmp.1q, \inputb\().2d, \Hb\().2d
        eor     ghash_hi.16b, ghash_hi.16b, ghash_tmp.16b
        // Middle product
        trn1    ghash_tmp.2d,  \inputb\().2d, \inputa\().2d
        trn2    \inputb\().2d, \inputb\().2d, \inputa\().2d
        eor     ghash_tmp.16b, ghash_tmp.16b, \inputb\().16b
        pmull2  \inputa\().1q, ghash_tmp.2d, \Hk_mid\().2d
        eor     ghash_mid.16b, ghash_mid.16b, \inputa\().16b
        pmull   ghash_tmp.1q, ghash_tmp.1d, \Hk_mid\().1d
        eor     ghash_mid.16b, ghash_mid.16b, ghash_tmp.16b
.endm

.macro ghash_init_0 input, Hk, Hk_mid, tag
        rev64 \input\().16b, \input\().16b
        eor   \input\().16b, \input\().16b, \tag\().16b
        // Low product
        pmull   ghash_lo.1q, \input\().1d, \Hk\().1d
        // High product
        pmull2  ghash_hi.1q, \input\().2d, \Hk\().2d
        // Middle product
        mov     ghash_tmp_d, \input\().d[1]
        eor     ghash_tmp.8b, ghash_tmp.8b, \input\().8b
        pmull   ghash_mid.1q, ghash_tmp.1d, \Hk_mid\().1d
.endm

.macro ghash_init_1 input, Hk, Hk_mid, tag
        rev64 \input\().16b, \input\().16b
        eor   \input\().16b, \input\().16b, \tag\().16b
        // Low product
        pmull   ghash_lo.1q, \input\().1d, \Hk\().1d
        // High product
        pmull2  ghash_hi.1q, \input\().2d, \Hk\().2d
        // Middle product
        ext     ghash_tmp.16b, \input\().16b, \input\().16b, #8
        eor     ghash_tmp.16b, ghash_tmp.16b, \input\().16b
        pmull2  ghash_mid.1q, ghash_tmp.2d, \Hk_mid\().2d
.endm

.macro ghash_acc_0 input, Hk, Hk_mid
        rev64   \input\().16b, \input\().16b
        // Low product
        pmull   ghash_tmp.1q, \input\().1d, \Hk\().1d
        eor     ghash_lo.16b, ghash_lo.16b, ghash_tmp.16b
        // High product
        pmull2  ghash_tmp.1q, \input\().2d, \Hk\().2d
        eor     ghash_hi.16b, ghash_hi.16b, ghash_tmp.16b
        // Middle product
        mov     ghash_tmp_d, \input\().d[1]
        eor     ghash_tmp.8b, ghash_tmp.8b, \input\().8b
        pmull   ghash_tmp.1q, ghash_tmp.1d, \Hk_mid\().1d
        eor     ghash_mid.16b, ghash_mid.16b, ghash_tmp.16b
.endm

.macro ghash_acc_1 input, Hk, Hk_mid
        rev64   \input\().16b, \input\().16b

        // Low product
        pmull   ghash_tmp.1q, \input\().1d, \Hk\().1d
        eor     ghash_lo.16b, ghash_lo.16b, ghash_tmp.16b
        // High product
        pmull2  ghash_tmp.1q, \input\().2d, \Hk\().2d
        eor     ghash_hi.16b, ghash_hi.16b, ghash_tmp.16b
        // Middle product
        ext     ghash_tmp.16b, \input\().16b, \input\().16b, #8
        eor     ghash_tmp.16b, ghash_tmp.16b, \input\().16b
        pmull2  ghash_tmp.1q, ghash_tmp.2d, \Hk_mid\().2d
        eor     ghash_mid.16b, ghash_mid.16b, ghash_tmp.16b
.endm

.macro ghash_finalize tag
        eor        modulo_tmp0.16b, ghash_lo.16b,  ghash_hi.16b
        pmull      modulo_tmp1.1q,  ghash_hi.1d,   ghash_mod.1d
        ext        ghash_hi.16b,    ghash_hi.16b,  ghash_hi.16b, #8
        eor        ghash_mid.16b,   ghash_mid.16b, modulo_tmp0.16b
        eor        modulo_tmp1.16b, ghash_hi.16b,  modulo_tmp1.16b
        eor        ghash_mid.16b,   ghash_mid.16b, modulo_tmp1.16b
        pmull      ghash_hi.1q,     ghash_mid.1d,  ghash_mod.1d
        eor        ghash_lo.16b,    ghash_lo.16b,  ghash_hi.16b
        ext        ghash_mid.16b,   ghash_mid.16b, ghash_mid.16b, #8
        eor        \tag\().16b,     ghash_lo.16b,  ghash_mid.16b
        ext        \tag\().16b, \tag\().16b, \tag\().16b, #8
.endm

.macro load_tag
        ldr      tag_q, [tag_ptr]
        rev64    tag.16b, tag.16b
.endm

.macro prepare_ghash
        // Prepare constant for modular reduction
        movi ghash_mod.8b, #0xc2
        shl  ghash_mod_d, ghash_mod_d, #56
.endm

/********************************************************************/
/*                            Core routine                          */
/********************************************************************/

.align        4
_aes_gcm_enc_kernel_slothy_base_128:
aes_gcm_enc_kernel_slothy_base_128:
#ifdef BORINGSSL_DISPATCH_TEST
        adrp  x9,_BORINGSSL_function_hit@PAGE
        add   x9, x9, _BORINGSSL_function_hit@PAGEOFF
        mov   w10, #1
        strb  w10, [x9,#2] // kFlag_aes_gcm_enc_kernel
#endif

        AARCH64_SIGN_LINK_REGISTER
        sub sp, sp, #STACK_SIZE

Lenc_preamble_start:
        save_gprs
        save_vregs

        lsr byte_len, len_bits, #3

        load_round_keys
        load_tag
        load_iv

        load_htable_34
        load_htable_12

        prepare_loop_counts
        prepare_ghash

Lenc_preamble_end:

        cbz count, Lloop_unrolled_end
                                             // Instructions:    73
                                             // Expected cycles: 46
                                             // Expected IPC:    1.59
                                             //
                                             // Cycle bound:     46.0
                                             // IPC bound:       1.59
                                             //
                                             // Wall time:     1.12s
                                             // User time:     1.12s
                                             //
                                             // ------------- cycle (expected) -------------->
                                             // 0                        25
                                             // |------------------------|--------------------
        rev32 v9.16B, v31.16B                // *.............................................
        add v3.4S, v31.4S, v30.4S            // *.............................................
        ldr q29, [x0], #(4*16)               // .*............................................
        ldr q1, [x0, #-32]                   // .*............................................
        aesr v9.16b, v18.16b                 // ..*...........................................
        rev32 v2.16B, v3.16B                 // ..*...........................................
        add v3.4S, v3.4S, v30.4S             // ...*..........................................
        ldr q4, [x0, #-48]                   // ...*..........................................
        aesr v9.16b, v19.16b                 // ....*.........................................
        ldr q5, [x0, #-16]                   // ....*.........................................
        eor v29.16B, v29.16B, v28.16B        // .....*........................................
        aesr v2.16b, v18.16b                 // .....*........................................
        eor v6.16B, v1.16B, v28.16B          // ......*.......................................
        aesr v9.16b, v20.16b                 // ......*.......................................
        aesr v2.16b, v19.16b                 // .......*......................................
        add v10.4S, v3.4S, v30.4S            // .......*......................................
        rev32 v3.16B, v3.16B                 // ........*.....................................
        aesr v9.16b, v21.16b                 // ........*.....................................
        aesr v2.16b, v20.16b                 // .........*....................................
        rev32 v1.16B, v10.16B                // .........*....................................
        eor v4.16B, v4.16B, v28.16B          // ..........*...................................
        aesr v9.16b, v22.16b                 // ..........*...................................
        eor v8.16B, v5.16B, v28.16B          // ...........*..................................
        aesr v2.16b, v21.16b                 // ...........*..................................
        add v31.4S, v10.4S, v30.4S           // ............*.................................
        aesr v9.16b, v23.16b                 // ............*.................................
        aesr v3.16b, v18.16b                 // .............*................................
        aesr v9.16b, v24.16b                 // ..............*...............................
        aesr v2.16b, v22.16b                 // ...............*..............................
        aesr v9.16b, v25.16b                 // ................*.............................
        aesr v3.16b, v19.16b                 // .................*............................
        aesr v9.16b, v26.16b                 // ..................*...........................
        aesr v2.16b, v23.16b                 // ...................*..........................
        aese v9.16b, v27.16b                 // ....................*.........................
        aesr v3.16b, v20.16b                 // .....................*........................
        eor v9.16B, v29.16B, v9.16B          // ......................*.......................
        aesr v2.16b, v24.16b                 // ......................*.......................
        aesr v3.16b, v21.16b                 // .......................*......................
        aesr v2.16b, v25.16b                 // ........................*.....................
        rev64 v29.16B, v9.16B                // ........................*.....................
        aesr v1.16b, v18.16b                 // .........................*....................
        str q9, [x2], #(4*16)                // .........................*....................
        eor v9.16B, v29.16B, v11.16B         // ..........................*...................
        aesr v2.16b, v26.16b                 // ..........................*...................
        aesr v1.16b, v19.16b                 // ...........................*..................
        aesr v3.16b, v22.16b                 // ............................*.................
        aese v2.16b, v27.16b                 // .............................*................
        aesr v3.16b, v23.16b                 // ..............................*...............
        eor v11.16B, v4.16B, v2.16B          // ...............................*..............
        aesr v1.16b, v20.16b                 // ...............................*..............
        aesr v3.16b, v24.16b                 // ................................*.............
        aesr v1.16b, v21.16b                 // .................................*............
        rev64 v0.16B, v11.16B                // .................................*............
        str q11, [x2, #-48]                  // ..................................*...........
        aesr v3.16b, v25.16b                 // ..................................*...........
        aesr v1.16b, v22.16b                 // ...................................*..........
        trn1 v11.2D, v0.2D, v9.2D            // ...................................*..........
        aesr v3.16b, v26.16b                 // ....................................*.........
        trn2 v29.2D, v0.2D, v9.2D            // ....................................*.........
        aesr v1.16b, v23.16b                 // .....................................*........
        aese v3.16b, v27.16b                 // ......................................*.......
        aesr v1.16b, v24.16b                 // .......................................*......
        eor v2.16B, v6.16B, v3.16B           // ........................................*.....
        pmull v4.1q, v9.1d, v16.1d           // ........................................*.....
        eor v3.16B, v11.16B, v29.16B         // .........................................*....
        aesr v1.16b, v25.16b                 // .........................................*....
        pmull v11.1q, v0.1d, v15.1d          // ..........................................*...
        str q2, [x2, #-32]                   // ..........................................*...
        rev64 v2.16B, v2.16B                 // ...........................................*..
        aesr v1.16b, v26.16b                 // ...........................................*..
        pmull2 v5.1q, v9.2d, v16.2d          // ............................................*.
        eor v11.16B, v4.16B, v11.16B         // ............................................*.
        aese v1.16b, v27.16b                 // .............................................*

                                                                // ------------- cycle (expected) -------------->
                                                                // 0                        25
                                                                // |------------------------|--------------------
        // rev32 V<ssa_3>.16B, v31.16B                          // *.............................................
        // add V<ssa_4>.4S, v31.4S, v30.4S                      // *.............................................
        // aesr V<ssa_3>.16b, v18.16b                           // ..*...........................................
        // aesr V<ssa_3>.16b, v19.16b                           // ....*.........................................
        // aesr V<ssa_3>.16b, v20.16b                           // ......*.......................................
        // aesr V<ssa_3>.16b, v21.16b                           // ........*.....................................
        // aesr V<ssa_3>.16b, v22.16b                           // ..........*...................................
        // aesr V<ssa_3>.16b, v23.16b                           // ............*.................................
        // rev32 V<ssa_22>.16B, V<ssa_4>.16B                    // ..*...........................................
        // aesr V<ssa_22>.16b, v18.16b                          // .....*........................................
        // aesr V<ssa_3>.16b, v24.16b                           // ..............*...............................
        // add V<ssa_27>.4S, V<ssa_4>.4S, v30.4S                // ...*..........................................
        // aesr V<ssa_22>.16b, v19.16b                          // .......*......................................
        // aesr V<ssa_3>.16b, v25.16b                           // ................*.............................
        // aesr V<ssa_22>.16b, v20.16b                          // .........*....................................
        // ldr Q<ssa_29>, [x0], #(4*16)                         // .*............................................
        // aesr V<ssa_3>.16b, v26.16b                           // ..................*...........................
        // add V<ssa_30>.4S, V<ssa_27>.4S, v30.4S               // .......*......................................
        // rev32 V<ssa_31>.16B, V<ssa_27>.16B                   // ........*.....................................
        // aesr V<ssa_22>.16b, v21.16b                          // ...........*..................................
        // aese V<ssa_3>.16b, v27.16b                           // ....................*.........................
        // aesr V<ssa_31>.16b, v18.16b                          // .............*................................
        // eor V<ssa_33>.16B, V<ssa_29>.16B, v28.16B            // .....*........................................
        // aesr V<ssa_22>.16b, v22.16b                          // ...............*..............................
        // eor V<ssa_35>.16B, V<ssa_33>.16B, V<ssa_3>.16B       // ......................*.......................
        // aesr V<ssa_31>.16b, v19.16b                          // .................*............................
        // aesr V<ssa_22>.16b, v23.16b                          // ...................*..........................
        // aesr V<ssa_31>.16b, v20.16b                          // .....................*........................
        // ldr Q<ssa_37>, [x0, #-32]                            // .*............................................
        // aesr V<ssa_22>.16b, v24.16b                          // ......................*.......................
        // ldr Q<ssa_38>, [x0, #-48]                            // ...*..........................................
        // aesr V<ssa_31>.16b, v21.16b                          // .......................*......................
        // rev32 v1.16B, V<ssa_30>.16B                          // .........*....................................
        // aesr V<ssa_22>.16b, v25.16b                          // ........................*.....................
        // ldr Q<ssa_39>, [x0, #-16]                            // ....*.........................................
        // eor V<ssa_40>.16B, V<ssa_37>.16B, v28.16B            // ......*.......................................
        // aesr v1.16b, v18.16b                                 // .........................*....................
        // aesr V<ssa_22>.16b, v26.16b                          // ..........................*...................
        // eor V<ssa_42>.16B, V<ssa_38>.16B, v28.16B            // ..........*...................................
        // aese V<ssa_22>.16b, v27.16b                          // .............................*................
        // rev64 V<ssa_44>.16B, V<ssa_35>.16B                   // ........................*.....................
        // str Q<ssa_35>, [x2], #(4*16)                         // .........................*....................
        // aesr v1.16b, v19.16b                                 // ...........................*..................
        // aesr V<ssa_31>.16b, v22.16b                          // ............................*.................
        // eor v8.16B, V<ssa_39>.16B, v28.16B                   // ...........*..................................
        // aesr v1.16b, v20.16b                                 // ...............................*..............
        // eor V<ssa_46>.16B, V<ssa_42>.16B, V<ssa_22>.16B      // ...............................*..............
        // aesr V<ssa_31>.16b, v23.16b                          // ..............................*...............
        // aesr v1.16b, v21.16b                                 // .................................*............
        // aesr V<ssa_31>.16b, v24.16b                          // ................................*.............
        // rev64 v0.16B, V<ssa_46>.16B                          // .................................*............
        // aesr v1.16b, v22.16b                                 // ...................................*..........
        // add v31.4S, V<ssa_30>.4S, v30.4S                     // ............*.................................
        // aesr V<ssa_31>.16b, v25.16b                          // ..................................*...........
        // eor V<ssa_49>.16B, V<ssa_44>.16B, v11.16B            // ..........................*...................
        // aesr v1.16b, v23.16b                                 // .....................................*........
        // aesr V<ssa_31>.16b, v26.16b                          // ....................................*.........
        // aesr v1.16b, v24.16b                                 // .......................................*......
        // trn1 V<ssa_50>.2D, v0.2D, V<ssa_49>.2D               // ...................................*..........
        // str Q<ssa_46>, [x2, #-48]                            // ..................................*...........
        // aese V<ssa_31>.16b, v27.16b                          // ......................................*.......
        // aesr v1.16b, v25.16b                                 // .........................................*....
        // trn2 V<ssa_51>.2D, v0.2D, V<ssa_49>.2D               // ....................................*.........
        // eor V<ssa_52>.16B, V<ssa_40>.16B, V<ssa_31>.16B      // ........................................*.....
        // pmull V<ssa_53>.1q, V<ssa_49>.1d, v16.1d             // ........................................*.....
        // eor v3.16B, V<ssa_50>.16B, V<ssa_51>.16B             // .........................................*....
        // aesr v1.16b, v26.16b                                 // ...........................................*..
        // pmull V<ssa_54>.1q, v0.1d, v15.1d                    // ..........................................*...
        // str Q<ssa_52>, [x2, #-32]                            // ..........................................*...
        // rev64 v2.16B, V<ssa_52>.16B                          // ...........................................*..
        // aese v1.16b, v27.16b                                 // .............................................*
        // pmull2 v5.1q, V<ssa_49>.2d, v16.2d                   // ............................................*.
        // eor v11.16B, V<ssa_53>.16B, V<ssa_54>.16B            // ............................................*.

        sub count, count, #1
cbz count, Lloop_unrolled_start_postamble
Lloop_unrolled_start:
                                                 // Instructions:    107
                                                 // Expected cycles: 54
                                                 // Expected IPC:    1.98
                                                 //
                                                 // Cycle bound:     54.0
                                                 // IPC bound:       1.98
                                                 //
                                                 // Wall time:     152.60s
                                                 // User time:     152.60s
                                                 //
                                                 // ----------------- cycle (expected) ------------------>
                                                 // 0                        25                       50
                                                 // |------------------------|------------------------|---
        eor v4.16B, v8.16B, v1.16B               // *.....................................................
        pmull v6.1q, v2.1d, v13.1d               // *.....................................................
        pmull2 v10.1q, v0.2d, v15.2d             // .*....................................................
        rev32 v1.16B, v31.16B                    // .e....................................................
        add v9.4S, v31.4S, v30.4S                // ..e...................................................
        pmull2 v0.1q, v2.2d, v13.2d              // ..*...................................................
        eor v31.16B, v5.16B, v10.16B             // ...*..................................................
        pmull v10.1q, v3.1d, v17.1d              // ...*..................................................
        aesr v1.16b, v18.16b                     // ....e.................................................
        rev64 v8.16B, v4.16B                     // ....*.................................................
        eor v31.16B, v31.16B, v0.16B             // .....*................................................
        pmull2 v5.1q, v3.2d, v17.2d              // .....*................................................
        aesr v1.16b, v19.16b                     // ......e...............................................
        trn1 v3.2D, v8.2D, v2.2D                 // ......*...............................................
        trn2 v0.2D, v8.2D, v2.2D                 // .......*..............................................
        pmull2 v2.1q, v8.2d, v12.2d              // .......*..............................................
        eor v10.16B, v5.16B, v10.16B             // ........*.............................................
        aesr v1.16b, v20.16b                     // ........e.............................................
        pmull v5.1q, v8.1d, v12.1d               // .........*............................................
        eor v3.16B, v3.16B, v0.16B               // .........*............................................
        eor v6.16B, v11.16B, v6.16B              // ..........*...........................................
        aesr v1.16b, v21.16b                     // ..........e...........................................
        str q4, [x2, #-16]                       // ...........*..........................................
        pmull2 v4.1q, v3.2d, v14.2d              // ...........*..........................................
        eor v11.16B, v6.16B, v5.16B              // ............*.........................................
        aesr v1.16b, v22.16b                     // ............e.........................................
        eor v2.16B, v31.16B, v2.16B              // .............*........................................
        pmull v3.1q, v3.1d, v14.1d               // .............*........................................
        aesr v1.16b, v23.16b                     // ..............e.......................................
        rev32 v31.16B, v9.16B                    // ..............e.......................................
        eor v29.16B, v10.16B, v4.16B             // ...............*......................................
        pmull v0.1q, v2.1d, v7.1d                // ...............*......................................
        aesr v31.16b, v18.16b                    // ................e.....................................
        eor v5.16B, v11.16B, v2.16B              // ................*.....................................
        eor v3.16B, v29.16B, v3.16B              // .................*....................................
        aesr v1.16b, v24.16b                     // .................e....................................
        add v8.4S, v9.4S, v30.4S                 // ..................e...................................
        aesr v31.16b, v19.16b                    // ..................e...................................
        eor v5.16B, v3.16B, v5.16B               // ...................*..................................
        aesr v1.16b, v25.16b                     // ...................e..................................
        aesr v31.16b, v20.16b                    // ....................e.................................
        ldr q29, [x0], #(4*16)                   // ....................e.................................
        aesr v1.16b, v26.16b                     // .....................e................................
        add v10.4S, v8.4S, v30.4S                // .....................e................................
        rev32 v4.16B, v8.16B                     // ......................e...............................
        aesr v31.16b, v21.16b                    // ......................e...............................
        ext v3.16B, v2.16B, v2.16B, #8           // .......................*..............................
        aese v1.16b, v27.16b                     // .......................e..............................
        aesr v4.16b, v18.16b                     // ........................e.............................
        eor v9.16B, v29.16B, v28.16B             // ........................e.............................
        eor v8.16B, v3.16B, v0.16B               // .........................*............................
        aesr v31.16b, v22.16b                    // .........................e............................
        eor v0.16B, v9.16B, v1.16B               // ..........................e...........................
        aesr v4.16b, v19.16b                     // ..........................e...........................
        eor v3.16B, v5.16B, v8.16B               // ...........................*..........................
        aesr v31.16b, v23.16b                    // ...........................e..........................
        aesr v4.16b, v20.16b                     // ............................e.........................
        ldr q9, [x0, #-32]                       // ............................e.........................
        aesr v31.16b, v24.16b                    // .............................e........................
        ldr q29, [x0, #-48]                      // .............................e........................
        aesr v4.16b, v21.16b                     // ..............................e.......................
        rev32 v1.16B, v10.16B                    // ..............................e.......................
        aesr v31.16b, v25.16b                    // ...............................e......................
        ldr q2, [x0, #-16]                       // ...............................e......................
        eor v5.16B, v9.16B, v28.16B              // ................................e.....................
        aesr v1.16b, v18.16b                     // ................................e.....................
        aesr v31.16b, v26.16b                    // .................................e....................
        ext v9.16B, v3.16B, v3.16B, #8           // .................................*....................
        eor v6.16B, v29.16B, v28.16B             // ..................................e...................
        pmull v29.1q, v3.1d, v7.1d               // ..................................*...................
        aese v31.16b, v27.16b                    // ...................................e..................
        rev64 v3.16B, v0.16B                     // ...................................e..................
        str q0, [x2], #(4*16)                    // ....................................e.................
        aesr v1.16b, v19.16b                     // ....................................e.................
        eor v29.16B, v11.16B, v29.16B            // .....................................*................
        aesr v4.16b, v22.16b                     // .....................................e................
        eor v8.16B, v2.16B, v28.16B              // ......................................e...............
        aesr v1.16b, v20.16b                     // ......................................e...............
        eor v2.16B, v6.16B, v31.16B              // .......................................e..............
        aesr v4.16b, v23.16b                     // .......................................e..............
        eor v31.16B, v29.16B, v9.16B             // ........................................*.............
        aesr v1.16b, v21.16b                     // ........................................e.............
        aesr v4.16b, v24.16b                     // .........................................e............
        rev64 v0.16B, v2.16B                     // .........................................e............
        ext v11.16B, v31.16B, v31.16B, #8        // ..........................................*...........
        aesr v1.16b, v22.16b                     // ..........................................e...........
        add v31.4S, v10.4S, v30.4S               // ...........................................e..........
        aesr v4.16b, v25.16b                     // ...........................................e..........
        eor v6.16B, v3.16B, v11.16B              // ............................................e.........
        aesr v1.16b, v23.16b                     // ............................................e.........
        aesr v4.16b, v26.16b                     // .............................................e........
        aesr v1.16b, v24.16b                     // ..............................................e.......
        trn1 v11.2D, v0.2D, v6.2D                // ..............................................e.......
        str q2, [x2, #-48]                       // ...............................................e......
        aese v4.16b, v27.16b                     // ...............................................e......
        aesr v1.16b, v25.16b                     // ................................................e.....
        trn2 v10.2D, v0.2D, v6.2D                // ................................................e.....
        eor v5.16B, v5.16B, v4.16B               // .................................................e....
        pmull v4.1q, v6.1d, v16.1d               // .................................................e....
        eor v3.16B, v11.16B, v10.16B             // ..................................................e...
        aesr v1.16b, v26.16b                     // ..................................................e...
        pmull v11.1q, v0.1d, v15.1d              // ...................................................e..
        str q5, [x2, #-32]                       // ...................................................e..
        rev64 v2.16B, v5.16B                     // ....................................................e.
        aese v1.16b, v27.16b                     // ....................................................e.
        pmull2 v5.1q, v6.2d, v16.2d              // .....................................................e
        eor v11.16B, v4.16B, v11.16B             // .....................................................e

                                                           // -------------------------------------- cycle (expected) --------------------------------------->
                                                           // 0                        25                       50                       75
                                                           // |------------------------|------------------------|------------------------|--------------------
        // ldr q29, [x0], #(4*16)                          // ...................e.................................'...................~......................
        // rev32  v0.16b, v31.16b                          // e....................................................'~.........................................
        // add    v31.4s, v31.4s, v30.4s                   // .e...................................................'.~........................................
        // aesr v0.16b, v18.16b                            // ...e.................................................'...~......................................
        // aesr v0.16b, v19.16b                            // .....e...............................................'.....~....................................
        // aesr v0.16b, v20.16b                            // .......e.............................................'.......~..................................
        // aesr v0.16b, v21.16b                            // .........e...........................................'.........~................................
        // aesr v0.16b, v22.16b                            // ...........e.........................................'...........~..............................
        // aesr v0.16b, v23.16b                            // .............e.......................................'.............~............................
        // aesr v0.16b, v24.16b                            // ................e....................................'................~.........................
        // aesr v0.16b, v25.16b                            // ..................e..................................'..................~.......................
        // aesr v0.16b, v26.16b                            // ....................e................................'....................~.....................
        // aese v0.16b, v27.16b                            // ......................e..............................'......................~...................
        // eor v29.16b, v29.16b, v28.16b                   // .......................e.............................'.......................~..................
        // eor v0.16b, v29.16b, v0.16b                     // .........................e...........................'.........................~................
        // str q0, [x2], #(4*16)                           // ...................................e.................'...................................~......
        // ldr q29, [x0, #(-3*16)]                         // ............................e........................'............................~.............
        // rev32  v2.16b, v31.16b                          // .............e.......................................'.............~............................
        // add    v31.4s, v31.4s, v30.4s                   // .................e...................................'.................~........................
        // aesr v2.16b, v18.16b                            // ...............e.....................................'...............~..........................
        // aesr v2.16b, v19.16b                            // .................e...................................'.................~........................
        // aesr v2.16b, v20.16b                            // ...................e.................................'...................~......................
        // aesr v2.16b, v21.16b                            // .....................e...............................'.....................~....................
        // aesr v2.16b, v22.16b                            // ........................e............................'........................~.................
        // aesr v2.16b, v23.16b                            // ..........................e..........................'..........................~...............
        // aesr v2.16b, v24.16b                            // ............................e........................'............................~.............
        // aesr v2.16b, v25.16b                            // ..............................e......................'..............................~...........
        // aesr v2.16b, v26.16b                            // ................................e....................'................................~.........
        // aese v2.16b, v27.16b                            // ..................................e..................'..................................~.......
        // eor v29.16b, v29.16b, v28.16b                   // .................................e...................'.................................~........
        // eor v2.16b, v29.16b, v2.16b                     // ......................................e..............'......................................~...
        // str q2, [x2, #(-3*16)]                          // ..............................................e......'..........................................
        // rev64 v0.16b, v0.16b                            // ..................................e..................'..................................~.......
        // rev64 v2.16b, v2.16b                            // ........................................e............'........................................~.
        // eor   v0.16b, v0.16b, v11.16b                   // ...........................................e.........'..........................................
        // pmull   v8.1q,  v0.1d, v16.1d                   // ................................................e....'..........................................
        // pmull   v11.1q, v2.1d, v15.1d                   // ..................................................e..'..........................................
        // eor     v8.16b, v8.16b, v11.16b                 // ....................................................e'..........................................
        // pmull2  v9.1q, v0.2d, v16.2d                    // ....................................................e'..........................................
        // pmull2  v11.1q, v2.2d, v15.2d                   // ~....................................................'*.........................................
        // eor     v9.16b, v9.16b, v11.16b                 // ..~..................................................'..*.......................................
        // trn1    v11.2d,  v2.2d, v0.2d                   // .............................................e.......'..........................................
        // trn2    v2.2d, v2.2d, v0.2d                     // ...............................................e.....'..........................................
        // eor     v11.16b, v11.16b, v2.16b                // .................................................e...'..........................................
        // pmull2  v10.1q, v11.2d, v17.2d                  // ....~................................................'....*.....................................
        // pmull   v11.1q, v11.1d, v17.1d                  // ..~..................................................'..*.......................................
        // eor     v10.16b, v10.16b, v11.16b               // .......~.............................................'.......*..................................
        // ldr q29, [x0, #(-2*16)]                         // ...........................e.........................'...........................~..............
        // rev32  v0.16b, v31.16b                          // .....................e...............................'.....................~....................
        // add    v31.4s, v31.4s, v30.4s                   // ....................e................................'....................~.....................
        // aesr v0.16b, v18.16b                            // .......................e.............................'.......................~..................
        // aesr v0.16b, v19.16b                            // .........................e...........................'.........................~................
        // aesr v0.16b, v20.16b                            // ...........................e.........................'...........................~..............
        // aesr v0.16b, v21.16b                            // .............................e.......................'.............................~............
        // aesr v0.16b, v22.16b                            // ....................................e................'....................................~.....
        // aesr v0.16b, v23.16b                            // ......................................e..............'......................................~...
        // aesr v0.16b, v24.16b                            // ........................................e............'........................................~.
        // aesr v0.16b, v25.16b                            // ..........................................e..........'..........................................
        // aesr v0.16b, v26.16b                            // ............................................e........'..........................................
        // aese v0.16b, v27.16b                            // ..............................................e......'..........................................
        // eor v29.16b, v29.16b, v28.16b                   // ...............................e.....................'...............................~..........
        // eor v0.16b, v29.16b, v0.16b                     // ................................................e....'..........................................
        // str q0, [x2, #(-2*16)]                          // ..................................................e..'..........................................
        // ldr q29, [x0, #(-1*16)]                         // ..............................e......................'..............................~...........
        // rev32  v2.16b, v31.16b                          // .............................e.......................'.............................~............
        // add    v31.4s, v31.4s, v30.4s                   // ..........................................e..........'..........................................
        // aesr v2.16b, v18.16b                            // ...............................e.....................'...............................~..........
        // aesr v2.16b, v19.16b                            // ...................................e.................'...................................~......
        // aesr v2.16b, v20.16b                            // .....................................e...............'.....................................~....
        // aesr v2.16b, v21.16b                            // .......................................e.............'.......................................~..
        // aesr v2.16b, v22.16b                            // .........................................e...........'..........................................
        // aesr v2.16b, v23.16b                            // ...........................................e.........'..........................................
        // aesr v2.16b, v24.16b                            // .............................................e.......'..........................................
        // aesr v2.16b, v25.16b                            // ...............................................e.....'..........................................
        // aesr v2.16b, v26.16b                            // .................................................e...'..........................................
        // aese v2.16b, v27.16b                            // ...................................................e.'..........................................
        // eor v29.16b, v29.16b, v28.16b                   // .....................................e...............'.....................................~....
        // eor v2.16b, v29.16b, v2.16b                     // .....................................................*..........................................
        // str q2, [x2, #(-1*16)]                          // ..........~..........................................'..........*...............................
        // rev64 v0.16b, v0.16b                            // ...................................................e.'..........................................
        // rev64 v2.16b, v2.16b                            // ...~.................................................'...*......................................
        // pmull   v11.1q, v0.1d, v13.1d                   // .....................................................*..........................................
        // eor     v8.16b, v8.16b, v11.16b                 // .........~...........................................'.........*................................
        // pmull   v11.1q, v2.1d, v12.1d                   // ........~............................................'........*.................................
        // eor     v8.16b, v8.16b, v11.16b                 // ...........~.........................................'...........*..............................
        // pmull2  v11.1q, v0.2d, v13.2d                   // .~...................................................'.*........................................
        // eor     v9.16b, v9.16b, v11.16b                 // ....~................................................'....*.....................................
        // pmull2  v11.1q, v2.2d, v12.2d                   // ......~..............................................'......*...................................
        // eor     v9.16b, v9.16b, v11.16b                 // ............~........................................'............*.............................
        // trn1    v11.2d,  v2.2d, v0.2d                   // .....~...............................................'.....*....................................
        // trn2    v2.2d, v2.2d, v0.2d                     // ......~..............................................'......*...................................
        // eor     v11.16b, v11.16b, v2.16b                // ........~............................................'........*.................................
        // pmull2  v0.1q, v11.2d, v14.2d                   // ..........~..........................................'..........*...............................
        // eor     v10.16b, v10.16b, v0.16b                // ..............~......................................'..............*...........................
        // pmull   v11.1q, v11.1d, v14.1d                  // ............~........................................'............*.............................
        // eor     v10.16b, v10.16b, v11.16b               // ................~....................................'................*.........................
        // eor        v0.16b, v8.16b,  v9.16b              // ...............~.....................................'...............*..........................
        // pmull      v1.1q,  v9.1d,   v7.1d               // ..............~......................................'..............*...........................
        // ext        v9.16b,    v9.16b,  v9.16b, #8       // ......................~..............................'......................*...................
        // eor        v10.16b,   v10.16b, v0.16b           // ..................~..................................'..................*.......................
        // eor        v1.16b, v9.16b,  v1.16b              // ........................~............................'........................*.................
        // eor        v10.16b,   v10.16b, v1.16b           // ..........................~..........................'..........................*...............
        // pmull      v9.1q,     v10.1d,  v7.1d            // .................................~...................'.................................*........
        // eor        v8.16b,    v8.16b,  v9.16b           // ....................................~................'....................................*.....
        // ext        v10.16b,   v10.16b, v10.16b, #8      // ................................~....................'................................*.........
        // eor        v11.16b,     v8.16b,  v10.16b        // .......................................~.............'.......................................*..
        // ext        v11.16b, v11.16b, v11.16b, #8        // .........................................~...........'.........................................*

        sub count, count, #1
        cbnz count, Lloop_unrolled_start
Lloop_unrolled_start_postamble:// end of loop kernel
                                                // Instructions:    34
                                                // Expected cycles: 25
                                                // Expected IPC:    1.36
                                                //
                                                // Cycle bound:     25.0
                                                // IPC bound:       1.36
                                                //
                                                // Wall time:     0.34s
                                                // User time:     0.34s
                                                //
                                                // ----- cycle (expected) ------>
                                                // 0                        25
                                                // |------------------------|----
        eor v9.16B, v8.16B, v1.16B              // *.............................
        pmull2 v1.1q, v3.2d, v17.2d             // *.............................
        pmull v3.1q, v3.1d, v17.1d              // .*............................
        pmull2 v29.1q, v2.2d, v13.2d            // ..*...........................
        rev64 v8.16B, v9.16B                    // ..*...........................
        eor v10.16B, v1.16B, v3.16B             // ...*..........................
        pmull2 v3.1q, v0.2d, v15.2d             // ...*..........................
        trn2 v6.2D, v8.2D, v2.2D                // ....*.........................
        trn1 v4.2D, v8.2D, v2.2D                // ....*.........................
        eor v1.16B, v5.16B, v3.16B              // .....*........................
        pmull v3.1q, v2.1d, v13.1d              // .....*........................
        eor v4.16B, v4.16B, v6.16B              // ......*.......................
        pmull v2.1q, v8.1d, v12.1d              // ......*.......................
        eor v29.16B, v1.16B, v29.16B            // .......*......................
        pmull2 v1.1q, v8.2d, v12.2d             // .......*......................
        eor v11.16B, v11.16B, v3.16B            // ........*.....................
        pmull2 v3.1q, v4.2d, v14.2d             // ........*.....................
        eor v29.16B, v29.16B, v1.16B            // .........*....................
        pmull v1.1q, v4.1d, v14.1d              // .........*....................
        eor v3.16B, v10.16B, v3.16B             // ..........*...................
        eor v11.16B, v11.16B, v2.16B            // ..........*...................
        ext v4.16B, v29.16B, v29.16B, #8        // ...........*..................
        pmull v2.1q, v29.1d, v7.1d              // ...........*..................
        eor v1.16B, v3.16B, v1.16B              // ............*.................
        eor v3.16B, v11.16B, v29.16B            // ............*.................
        eor v29.16B, v4.16B, v2.16B             // .............*................
        str q9, [x2, #-16]                      // .............*................
        eor v9.16B, v1.16B, v3.16B              // ..............*...............
        eor v9.16B, v9.16B, v29.16B             // ................*.............
        pmull v3.1q, v9.1d, v7.1d               // ..................*...........
        ext v9.16B, v9.16B, v9.16B, #8          // ...................*..........
        eor v11.16B, v11.16B, v3.16B            // ....................*.........
        eor v9.16B, v11.16B, v9.16B             // ......................*.......
        ext v11.16B, v9.16B, v9.16B, #8         // ........................*.....

                                                                    // ------ cycle (expected) ------>
                                                                    // 0                        25
                                                                    // |------------------------|-----
        // eor V<ssa_0>.16B, v8.16B, v1.16B                         // *..............................
        // pmull V<ssa_1>.1q, v2.1d, v13.1d                         // .....*.........................
        // pmull2 V<ssa_2>.1q, v0.2d, v15.2d                        // ...*...........................
        // pmull2 V<ssa_5>.1q, v2.2d, v13.2d                        // ..*............................
        // eor V<ssa_6>.16B, v5.16B, V<ssa_2>.16B                   // .....*.........................
        // pmull V<ssa_7>.1q, v3.1d, v17.1d                         // .*.............................
        // rev64 V<ssa_8>.16B, V<ssa_0>.16B                         // ..*............................
        // eor V<ssa_9>.16B, V<ssa_6>.16B, V<ssa_5>.16B             // .......*.......................
        // pmull2 V<ssa_10>.1q, v3.2d, v17.2d                       // *..............................
        // trn1 V<ssa_11>.2D, V<ssa_8>.2D, v2.2D                    // ....*..........................
        // trn2 V<ssa_12>.2D, V<ssa_8>.2D, v2.2D                    // ....*..........................
        // pmull2 V<ssa_13>.1q, V<ssa_8>.2d, v12.2d                 // .......*.......................
        // eor V<ssa_14>.16B, V<ssa_10>.16B, V<ssa_7>.16B           // ...*...........................
        // pmull V<ssa_15>.1q, V<ssa_8>.1d, v12.1d                  // ......*........................
        // eor V<ssa_16>.16B, V<ssa_11>.16B, V<ssa_12>.16B          // ......*........................
        // eor V<ssa_17>.16B, v11.16B, V<ssa_1>.16B                 // ........*......................
        // str Q<ssa_0>, [x2, #-16]                                 // .............*.................
        // pmull2 V<ssa_18>.1q, V<ssa_16>.2d, v14.2d                // ........*......................
        // eor V<ssa_19>.16B, V<ssa_17>.16B, V<ssa_15>.16B          // ..........*....................
        // eor V<ssa_20>.16B, V<ssa_9>.16B, V<ssa_13>.16B           // .........*.....................
        // pmull V<ssa_21>.1q, V<ssa_16>.1d, v14.1d                 // .........*.....................
        // eor V<ssa_23>.16B, V<ssa_14>.16B, V<ssa_18>.16B          // ..........*....................
        // pmull V<ssa_24>.1q, V<ssa_20>.1d, v7.1d                  // ...........*...................
        // eor V<ssa_25>.16B, V<ssa_19>.16B, V<ssa_20>.16B          // ............*..................
        // eor V<ssa_26>.16B, V<ssa_23>.16B, V<ssa_21>.16B          // ............*..................
        // eor V<ssa_28>.16B, V<ssa_26>.16B, V<ssa_25>.16B          // ..............*................
        // ext V<ssa_32>.16B, V<ssa_20>.16B, V<ssa_20>.16B, #8      // ...........*...................
        // eor V<ssa_34>.16B, V<ssa_32>.16B, V<ssa_24>.16B          // .............*.................
        // eor V<ssa_36>.16B, V<ssa_28>.16B, V<ssa_34>.16B          // ................*..............
        // ext V<ssa_41>.16B, V<ssa_36>.16B, V<ssa_36>.16B, #8      // ...................*...........
        // pmull V<ssa_43>.1q, V<ssa_36>.1d, v7.1d                  // ..................*............
        // eor V<ssa_45>.16B, V<ssa_19>.16B, V<ssa_43>.16B          // ....................*..........
        // eor V<ssa_47>.16B, V<ssa_45>.16B, V<ssa_41>.16B          // ......................*........
        // ext v11.16B, V<ssa_47>.16B, V<ssa_47>.16B, #8            // ........................*......

        b Lloop_unrolled_start_end
Lloop_unrolled_start_end:
Lloop_unrolled_end:

        cbz remainder, Lloop_1x_end
Lloop_1x_start:

        ldr plain_q, [input], #16
        aes_full_block aes_st0, plain, res0
        str res0_q, [output], #16
        ghash_init_0 res0, Ht1, Ht12, tag

        ghash_finalize tag

        sub remainder, remainder, #1
        cbnz remainder, Lloop_1x_start
Lloop_1x_end:

        // Return number of bytes processed
        mov x0, byte_len
        // Store new authentication tag
        rev64 tag.16b, tag.16b
        str tag_q, [tag_ptr]
        // Store updated counter
        rev32 rtmp_ctr.16b, rtmp_ctr.16b
        str rtmp_ctr_q, [ivec]

        restore_vregs
        restore_gprs

Lenc_postamble_end:
        add sp, sp, #STACK_SIZE

        AARCH64_VALIDATE_LINK_REGISTER
        ret

#endif
#endif  // !OPENSSL_NO_ASM && defined(__AARCH64EL__) && defined(__APPLE__)
#if defined(__ELF__)
// See https: // www.airs.com/blog/archives/518.
.section .note.GNU-stack,"",%progbits
#endif